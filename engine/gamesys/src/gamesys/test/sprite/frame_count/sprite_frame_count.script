-- Copyright 2020-2024 The Defold Foundation
-- Copyright 2014-2020 King
-- Copyright 2009-2014 Ragnar Svensson, Christian Murray
-- Licensed under the Defold License version 1.0 (the "License"); you may not use
-- this file except in compliance with the License.
-- 
-- You may obtain a copy of the License, together with FAQs at
-- https://www.defold.com/license
-- 
-- Unless required by applicable law or agreed to in writing, software distributed
-- under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
-- CONDITIONS OF ANY KIND, either express or implied. See the License for the
-- specific language governing permissions and limitations under the License.

tests_done = false

local function create_geometries(count)
    local tbl = {}
    for i=1,count do
        table.insert(tbl, {
                vertices = {},
                uvs      = {},
                indices  = {}})
    end
    return tbl
end

-- Check the default animation
local function test_simple()
    local frame_count = go.get("#sprite", "frame_count")
    assert(frame_count == 4)
end

-- Check a custom atlas with x animation frames
local function test_atlas()
    local tparams = {
       width          = 16,
       height         = 16,
       type           = graphics.TEXTURE_TYPE_2D,
       format         = graphics.TEXTURE_FORMAT_RGBA,
    }
    local texture    = resource.create_texture("/my_texture.texturec", tparams)
    local num_frames = 12
    local aparams = {
        texture = texture,
        animations = {{
                id          = "frames",
                width       = 128,
                height      = 128,
                frame_start = 1,
                frame_end   = num_frames + 1,
            }
        },
        geometries = create_geometries(num_frames)
    }
    local atlas = resource.create_atlas("/my_atlas.texturesetc", aparams)
    go.set("#sprite", "image", atlas)

    local frame_count = go.get("#sprite", "frame_count")
    assert(frame_count == num_frames)

    resource.release(texture)
    resource.release(atlas)
end

function init(self)
    test_simple()
    test_atlas()
    tests_done = true
end
