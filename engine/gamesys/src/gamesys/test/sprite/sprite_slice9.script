-- Copyright 2020-2024 The Defold Foundation
-- Copyright 2014-2020 King
-- Copyright 2009-2014 Ragnar Svensson, Christian Murray
-- Licensed under the Defold License version 1.0 (the "License"); you may not use
-- this file except in compliance with the License.
--
-- You may obtain a copy of the License, together with FAQs at
-- https://www.defold.com/license
--
-- Unless required by applicable law or agreed to in writing, software distributed
-- under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
-- CONDITIONS OF ANY KIND, either express or implied. See the License for the
-- specific language governing permissions and limitations under the License.

local function assert_exit(assert_that, error_string)
    if not assert_that then
        if error_string then
            print(error_string)
        end
        msg.post("@system:", "exit", { code = 1 })
        assert(assert_that)
    end
end

local function assert_vec4(v_test,v_correct)
    local v = v_test.x == v_correct.x and
        v_test.y == v_correct.y and
        v_test.z == v_correct.z and
        v_test.w == v_correct.w
    local e = v and nil or tostring(v_test) .. " and " .. tostring(v_correct) .. " are not the same!"
    assert_exit(v, e)
end

local function assert_number(v_test,v_correct)
    local v = v_test == v_correct
    local e = v and nil or tostring(v_test) .. " and " .. tostring(v_correct) .. " are not the same!"
    assert_exit(v, e)
end

function test_get(self, v_correct)
    assert_vec4(go.get("#sprite", "slice"), v_correct)
    assert_number(go.get("#sprite", "slice.x"), v_correct.x)
    assert_number(go.get("#sprite", "slice.y"), v_correct.y)
    assert_number(go.get("#sprite", "slice.z"), v_correct.z)
    assert_number(go.get("#sprite", "slice.w"), v_correct.w)
end

function test_set(self, v_correct)
    go.set("#sprite", "slice", v_correct)
    test_get(self, v_correct)
end

function init(self)
    test_get(self, vmath.vector4(32,32,32,32))
    test_set(self, vmath.vector4(1,2,3,4))
end
