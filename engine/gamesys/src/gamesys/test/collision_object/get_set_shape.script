-- Copyright 2020-2025 The Defold Foundation
-- Copyright 2014-2020 King
-- Copyright 2009-2014 Ragnar Svensson, Christian Murray
-- Licensed under the Defold License version 1.0 (the "License"); you may not use
-- this file except in compliance with the License.
--
-- You may obtain a copy of the License, together with FAQs at
-- https://www.defold.com/license
--
-- Unless required by applicable law or agreed to in writing, software distributed
-- under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
-- CONDITIONS OF ANY KIND, either express or implied. See the License for the
-- specific language governing permissions and limitations under the License.

-- helper functions to verify test data.
-- throws a Lua error if the assert(s) fails.
local function assert_near(a, b)
    local eps = 0.001
    local diff = math.abs(a - b)
    if not (diff < eps) then
        local err_msg = "assert_near failed, a: " .. tostring(a) .. ", b: " .. tostring(b) .. " diff == " .. tostring(diff) .. " >= " .. tostring(eps)
        error(debug.traceback(err_msg))
    end
end

function init(self)
	local sphere_1 = physics.get_shape("/get_set_shape_go#collisionobject", "shape_sphere_1")
	assert(sphere_1.diameter ~= nil)
	assert_near(sphere_1.diameter, 16)

	sphere_1.diameter = 15
	physics.set_shape("/get_set_shape_go#collisionobject", "shape_sphere_1", sphere_1)
	sphere_1 = physics.get_shape("/get_set_shape_go#collisionobject", "shape_sphere_1")
	assert_near(sphere_1.diameter, 15)

	local box_1 = physics.get_shape("/get_set_shape_go#collisionobject", "shape_box_1")
	assert(box_1.dimensions ~= nil)
	assert_near(box_1.dimensions.x, 20)
	assert_near(box_1.dimensions.y, 40)

	box_1.dimensions.y = 40
	physics.set_shape("/get_set_shape_go#collisionobject", "shape_box_1", box_1)
	box_1 = physics.get_shape("/get_set_shape_go#collisionobject", "shape_box_1")
	assert_near(box_1.dimensions.y, 40)
end
