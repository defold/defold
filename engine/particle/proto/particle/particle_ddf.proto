syntax = "proto2";
package dmParticleDDF;

import "ddf/ddf_extensions.proto";
import "ddf/ddf_math.proto";
import "graphics/graphics_ddf.proto";

option java_package = "com.dynamo.particle.proto";
option java_outer_classname = "Particle";

enum EmitterType
{
    EMITTER_TYPE_CIRCLE = 0 [(displayName) = "Circle"];
    EMITTER_TYPE_2DCONE = 1 [(displayName) = "2D Cone"];
    EMITTER_TYPE_BOX    = 2 [(displayName) = "Box"];
    EMITTER_TYPE_SPHERE = 3 [(displayName) = "Sphere"];
    EMITTER_TYPE_CONE   = 4 [(displayName) = "Cone"];
};

enum PlayMode
{
    PLAY_MODE_ONCE  = 0 [(displayName) = "Once"];
    PLAY_MODE_LOOP  = 1 [(displayName) = "Loop"];
}

enum EmissionSpace
{
    EMISSION_SPACE_WORLD    = 0 [(displayName) = "World"];
    EMISSION_SPACE_EMITTER  = 1 [(displayName) = "Emitter"];
}

message SplinePoint
{
    optional float x = 1;
    required float y = 2; // Required since it holds the value for non-curve property values.
    optional float t_x = 3 [default = 1.0];
    optional float t_y = 4;
}

enum EmitterKey
{
    EMITTER_KEY_SPAWN_RATE                  = 0 [(displayName) = "Spawn Rate"];
    EMITTER_KEY_SIZE_X                      = 1 [(displayName) = "Emitter Size X"];
    EMITTER_KEY_SIZE_Y                      = 2 [(displayName) = "Emitter Size Y"];
    EMITTER_KEY_SIZE_Z                      = 3 [(displayName) = "Emitter Size Z"];
    EMITTER_KEY_PARTICLE_LIFE_TIME          = 4 [(displayName) = "Particle Life Time"];
    EMITTER_KEY_PARTICLE_SPEED              = 5 [(displayName) = "Initial Speed"];
    EMITTER_KEY_PARTICLE_SIZE               = 6 [(displayName) = "Initial Size"];
    EMITTER_KEY_PARTICLE_RED                = 7 [(displayName) = "Initial Red"];
    EMITTER_KEY_PARTICLE_GREEN              = 8 [(displayName) = "Initial Green"];
    EMITTER_KEY_PARTICLE_BLUE               = 9 [(displayName) = "Initial Blue"];
    EMITTER_KEY_PARTICLE_ALPHA              = 10 [(displayName) = "Initial Alpha"];
    EMITTER_KEY_PARTICLE_ROTATION           = 11 [(displayName) = "Initial Rotation"];
    EMITTER_KEY_PARTICLE_STRETCH_FACTOR_X   = 12 [(displayName) = "Initial Stretch X"];
    EMITTER_KEY_PARTICLE_STRETCH_FACTOR_Y   = 13 [(displayName) = "Initial Stretch Y"];
    EMITTER_KEY_PARTICLE_ANGULAR_VELOCITY   = 14 [(displayName) = "Initial Angular Velocity"];
    EMITTER_KEY_COUNT                       = 15;
}

enum ParticleKey
{
    PARTICLE_KEY_SCALE              = 0 [(displayName) = "Life Scale"];
    PARTICLE_KEY_RED                = 1 [(displayName) = "Life Red"];
    PARTICLE_KEY_GREEN              = 2 [(displayName) = "Life Green"];
    PARTICLE_KEY_BLUE               = 3 [(displayName) = "Life Blue"];
    PARTICLE_KEY_ALPHA              = 4 [(displayName) = "Life Alpha"];
    PARTICLE_KEY_ROTATION           = 5 [(displayName) = "Life Rotation"];
    PARTICLE_KEY_STRETCH_FACTOR_X   = 6 [(displayName) = "Life Stretch X"];
    PARTICLE_KEY_STRETCH_FACTOR_Y   = 7 [(displayName) = "Life Stretch Y"];
    PARTICLE_KEY_ANGULAR_VELOCITY   = 8 [(displayName) = "Life Angular Velocity"];
    PARTICLE_KEY_COUNT              = 9;
}

enum ModifierType
{
    MODIFIER_TYPE_ACCELERATION  = 0 [(displayName) = "Acceleration"];
    MODIFIER_TYPE_DRAG          = 1 [(displayName) = "Drag"];
    MODIFIER_TYPE_RADIAL        = 2 [(displayName) = "Radial"];
    MODIFIER_TYPE_VORTEX        = 3 [(displayName) = "Vortex"];
}

enum ModifierKey
{
    MODIFIER_KEY_MAGNITUDE      = 0 [(displayName) = "Magnitude"];
    MODIFIER_KEY_MAX_DISTANCE   = 1 [(displayName) = "Max Distance"];
    MODIFIER_KEY_COUNT          = 2;
}

message Modifier
{
    required ModifierType   type            = 1;
    optional uint32         use_direction   = 2 [default = 0];
    optional dmMath.Point3  position        = 3;
    optional dmMath.Quat    rotation        = 4;

    message Property
    {
        required ModifierKey        key     = 1;
        repeated SplinePoint        points  = 2;
        optional float              spread  = 3 [default = 0.0];
    }
    repeated Property       properties      = 5;
}

// NOTE: Enum values must correspond to the enum values in XXX.cpp
enum BlendMode
{
    BLEND_MODE_ALPHA     = 0 [(displayName) = "Alpha"];
    BLEND_MODE_ADD       = 1 [(displayName) = "Add"];
    BLEND_MODE_ADD_ALPHA = 2 [(displayName) = "Add Alpha (Deprecated)"];
    BLEND_MODE_MULT      = 3 [(displayName) = "Multiply"];
    BLEND_MODE_SCREEN    = 4 [(displayName) = "Screen"];

}

enum SizeMode
{
    SIZE_MODE_MANUAL    = 0 [(displayName) = "Manual"];
    SIZE_MODE_AUTO      = 1 [(displayName) = "Auto"];
}

enum ParticleOrientation
{
    PARTICLE_ORIENTATION_DEFAULT = 0 [(displayName) = "Default"];
    PARTICLE_ORIENTATION_INITIAL_DIRECTION = 1 [(displayName) = "Initial Direction"];
    PARTICLE_ORIENTATION_MOVEMENT_DIRECTION = 2 [(displayName) = "Movement direction"];
    PARTICLE_ORIENTATION_ANGULAR_VELOCITY = 3 [(displayName) = "Angular Velocity"];
}

message Emitter
{
    optional string                 id                      = 1 [default = "emitter"];
    required PlayMode               mode                    = 2;
    optional float                  duration                = 3 [default = 0];

    required EmissionSpace          space                   = 4;
    optional dmMath.Point3          position                = 5;
    optional dmMath.Quat            rotation                = 6;

    required string                 tile_source             = 7 [(resource)=true];
    required string                 animation               = 8;
    required string                 material                = 9 [(resource)=true];
    optional BlendMode              blend_mode              = 10 [default = BLEND_MODE_ALPHA];
    optional ParticleOrientation    particle_orientation    = 11 [default = PARTICLE_ORIENTATION_DEFAULT];
    optional float                  inherit_velocity        = 12 [default = 0.0];

    required uint32                 max_particle_count      = 13;

    required EmitterType            type                    = 14;
    optional float                  start_delay             = 15 [default = 0.0];

    message Property
    {
        required EmitterKey         key     = 1;
        repeated SplinePoint        points  = 2;
        optional float              spread  = 3 [default = 0.0];
    }
    repeated Property               properties              = 16;

    message ParticleProperty
    {
        required ParticleKey    key     = 1;
        repeated SplinePoint    points  = 2;
    }
    repeated ParticleProperty       particle_properties     = 17;

    repeated Modifier               modifiers               = 18;

    optional SizeMode size_mode                             = 19 [default = SIZE_MODE_MANUAL];

    optional float                  start_delay_spread      = 20 [default = 0.0];
    optional float                  duration_spread         = 21 [default = 0.0];

    optional bool                   stretch_with_velocity  = 22 [default = false];

    optional float                  start_offset           = 23 [default = 0.0];
    optional dmMath.Point3          pivot                  = 24;

    repeated dmGraphics.VertexAttribute attributes         = 25;
}

message ParticleFX
{
    repeated Emitter    emitters    = 1;
    repeated Modifier   modifiers   = 2;
}
