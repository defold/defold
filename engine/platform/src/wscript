#! /usr/bin/env python
import waflib.Options
from waf_dynamo import platform_glfw_version

def configure(conf):
    pass

def build(bld):
    glfw_source = ['platform_window_glfw.cpp']
    glfw3_source_vulkan = None

    if platform_glfw_version(bld.env.PLATFORM) == 3:
        glfw_source = ['platform_window_glfw3.cpp']
        glfw3_source_vulkan = ['platform_window_glfw3_vulkan.cpp']
    else:
        if bld.env.PLATFORM in ('armv7-android', 'arm64-android'):
            glfw_source += ['platform_window_glfw_android.cpp']
        elif bld.env.PLATFORM in ('x86_64-ios', 'arm64-ios'):
            glfw_source += ['platform_window_glfw_ios.cpp']

    lib = bld.stlib(features = 'cxx c ddf',
                    includes = '.',
                    target   = 'platform',
                    source   = bld.path.ant_glob(glfw_source))

    if glfw3_source_vulkan != None:
        lib = bld.stlib(features = 'cxx c ddf',
                        includes = '.',
                        target   = 'platform_vulkan',
                        source   = lib.source + glfw3_source_vulkan)

    lib = bld.stlib(features = 'cxx c ddf',
                    includes = '.',
                    target   = 'platform_null',
                    source   = bld.path.ant_glob(['platform_window_null.cpp']))

    bld.add_group()

    bld.install_files('${PREFIX}/include/platform', 'platform_window.h')
    bld.install_files('${PREFIX}/include/platform', 'platform_window_constants.h')
    bld.install_files('${PREFIX}/include/platform', 'platform_window_android.h')
    bld.install_files('${PREFIX}/include/platform', 'platform_window_ios.h')
    bld.install_files('${PREFIX}/include/platform', 'platform_window_vulkan.h')
    bld.install_files('${PREFIX}/include/platform', 'platform_window_opengl.h')

    if not waflib.Options.options.skip_build_tests:
        bld.recurse('test')
