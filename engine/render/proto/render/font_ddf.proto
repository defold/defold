syntax = "proto2";
package dmRenderDDF;

import "ddf/ddf_extensions.proto";
import "ddf/ddf_math.proto";

option java_package = "com.dynamo.render.proto";
option java_outer_classname = "Font";

// Public API
enum FontTextureFormat
{
    TYPE_BITMAP          = 0 [(displayName) = "Bitmap"];
    TYPE_DISTANCE_FIELD  = 1 [(displayName) = "Distance Field"];
}

// Public API
enum FontRenderMode
{
    MODE_SINGLE_LAYER = 0 [(displayName) = "Single Layer"];
    MODE_MULTI_LAYER  = 1 [(displayName) = "Multi Layer"];
}

// Source format only
message FontDesc
{
    required string font = 1 [(resource)=true];
    required string material = 2 [(resource)=true];
    required uint32 size = 3;
    optional uint32 antialias = 4 [default = 1];
    optional float alpha = 5 [default = 1.0];
    optional float outline_alpha = 6 [default = 0.0];
    optional float outline_width = 7 [default = 0.0];
    optional float shadow_alpha = 8 [default = 0.0];
    optional uint32 shadow_blur = 9 [default = 0];
    optional float shadow_x = 10 [default = 0.0];
    optional float shadow_y = 11 [default = 0.0];
    optional string extra_characters = 12 [default = ""]; // Deprecated
    optional FontTextureFormat output_format = 13 [default = TYPE_BITMAP];

    optional bool all_chars = 14 [default = false];
    optional uint32 cache_width = 15 [default = 0];
    optional uint32 cache_height = 16 [default = 0];
    optional FontRenderMode render_mode = 17 [default = MODE_SINGLE_LAYER];
    optional string characters = 18 [default = ""];
}

// Used at runtime
message GlyphBank
{

// TODO: Bob shouldn't write down X/Y, in order to slim down content!
    message Glyph
    {
        required uint32 character         = 1;                  // utf8 codepoint
        optional float  width             = 2 [default = 0];    // glyph width
        optional uint32 image_width       = 3 [default = 0];    // glyph image width
        optional float  advance           = 4 [default = 0.0];
        optional float  left_bearing      = 5 [default = 0.0];
        optional int32  ascent            = 6 [default = 0]; // WHY 32 bits???
        optional int32  descent           = 7 [default = 0]; // WHY 32 bits???
        optional int32  x                 = 8 [default = 0]; // only used in editor preview
        optional int32  y                 = 9 [default = 0]; // only used in editor preview
        optional uint64 glyph_data_offset = 10; // WHY 64 bits???
        optional uint64 glyph_data_size   = 11; // 32 bits should suffice?
    }

    repeated Glyph             glyphs                = 1;
    optional uint64            glyph_padding         = 2 [default = 0];
    optional uint32            glyph_channels        = 3 [default = 0];
    optional bytes             glyph_data            = 4; // glyph data may be compressed

    optional float             max_ascent            = 5 [default = 0.0];
    optional float             max_descent           = 6 [default = 0.0];
    optional float             max_advance           = 7 [default = 0.0];
    optional float             max_width             = 8 [default = 0.0];
    optional float             max_height            = 9 [default = 0.0];
    optional FontTextureFormat image_format          = 10 [default = TYPE_BITMAP];

    // TODO: Move to fontDesc
    optional float             sdf_spread            = 11 [default = 1.0];
    optional float             sdf_outline           = 12 [default = 0.0];
    optional float             sdf_shadow            = 13 [default = 0.0];

    // TODO: Move to fontDesc
    optional uint32            cache_width           = 14 [default = 0];
    optional uint32            cache_height          = 15 [default = 0];

    optional uint32            cache_cell_width      = 16 [default = 0];
    optional uint32            cache_cell_height     = 17 [default = 0];
    optional uint32            cache_cell_max_ascent = 18 [default = 0];

    optional uint32            padding               = 19 [default = 0];
    optional bool              is_monospaced         = 20 [default = false];
}

// Used at runtime.
message FontMap
{
    optional string material      = 1 [default = "", (resource)=true];
    optional string glyph_bank    = 2 [default = "", (resource)=true];
    optional string font          = 3 [default = "", (resource)=true];

    optional uint32 size          = 4 [default = 0];
    optional uint32 antialias     = 5 [default = 1];
    optional float  shadow_x      = 6 [default = 0.0];
    optional float  shadow_y      = 7 [default = 0.0];
    optional uint32 shadow_blur   = 8 [default = 0];
    optional float  shadow_alpha  = 9 [default = 1.0];
    optional float  alpha         = 10 [default = 1.0];
    optional float  outline_alpha = 11 [default = 1.0];
    optional float  outline_width = 12 [default = 0.0];
    optional uint32 layer_mask    = 13 [default = 1];

    optional FontTextureFormat output_format = 14 [default = TYPE_BITMAP];
    optional FontRenderMode render_mode      = 15 [default = MODE_SINGLE_LAYER];

    optional bool all_chars       = 16 [default = false]; // 0x000000 - 0x10FFFF
    optional string characters    = 17 [default = ""];

    // If zero, it'll grow dynamically to our max size (2k x 4k)
    optional uint32 cache_width   = 18 [default = 0];
    optional uint32 cache_height  = 19 [default = 0];

    optional float sdf_spread     = 20 [default = 1.0];
    optional float sdf_outline    = 21 [default = 0.0];
    optional float sdf_shadow     = 22 [default = 0.0];
    optional uint32 padding       = 23 [default = 0];
}

