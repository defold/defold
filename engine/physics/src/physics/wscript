import waflib.Options

def configure(conf):
    pass

def build(bld):
    physics = bld.stlib(features = 'cxx',
                        use = 'DLIB  BULLET',
                        includes = '. .. ../box2d',
                        source = bld.path.ant_glob('*.cpp'),
                        proto_gen_py = True,
                        target = 'physics')

    physics.source = [x for x in physics.source if not x.name.endswith('null.cpp')]

    bld.stlib(features = 'cxx',
              use = 'DLIB',
              includes = '. ..',
              proto_gen_py = True,
              source = ['physics_common.cpp', 'physics_2d_null.cpp', 'physics_3d_null.cpp'],
              target = 'physics_null')

    bld.stlib(features = 'cxx',
              use = 'DLIB',
              includes = '. .. ../box2d',
              proto_gen_py = True,
              source = ['physics.cpp', 'physics_common.cpp', 'physics_2d.cpp', 'physics_3d_null.cpp', 'debug_draw_2d.cpp'],
              target = 'physics_2d')

    bld.stlib(features = 'cxx',
              use = 'DLIB',
              includes = '. ..',
              proto_gen_py = True,
              source = ['physics.cpp', 'physics_common.cpp', 'physics_3d.cpp', 'physics_2d_null.cpp', 'debug_draw_3d.cpp'],
              target = 'physics_3d')

    bld.install_files('${PREFIX}/include/physics', 'physics.h')
    bld.install_files('${PREFIX}/lib/python', 'waf_physics.py')

    if not waflib.Options.options.skip_build_tests:
        bld.recurse('test')

