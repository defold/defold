-- Copyright 2020-2025 The Defold Foundation
-- Copyright 2014-2020 King
-- Copyright 2009-2014 Ragnar Svensson, Christian Murray
-- Licensed under the Defold License version 1.0 (the "License"); you may not use
-- this file except in compliance with the License.
--
-- You may obtain a copy of the License, together with FAQs at
-- https://www.defold.com/license
--
-- Unless required by applicable law or agreed to in writing, software distributed
-- under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
-- CONDITIONS OF ANY KIND, either express or implied. See the License for the
-- specific language governing permissions and limitations under the License.

go.property("test_value", 0)

local epsilon = 0.000001

local function callback(self, url, property_id)
    self.loop = true
    go.animate(url, property_id, go.PLAYBACK_ONCE_FORWARD, 2, go.EASING_LINEAR, 1)
end

function init(self)
    go.animate(nil, "test_value", go.PLAYBACK_ONCE_FORWARD, 1, go.EASING_LINEAR, 1, 0, callback)
    self.timer = 0
    self.frame = 0
end

function update(self, dt)
    assert(math.abs(self.timer - self.test_value) < epsilon)
    if self.frame < 8 then
        self.timer = self.timer + dt
    end
    if self.frame > 3 then
        assert(self.loop)
    end
    self.frame = self.frame + 1
end