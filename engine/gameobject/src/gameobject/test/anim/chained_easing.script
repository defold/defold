-- Copyright 2020-2025 The Defold Foundation
-- Copyright 2014-2020 King
-- Copyright 2009-2014 Ragnar Svensson, Christian Murray
-- Licensed under the Defold License version 1.0 (the "License"); you may not use
-- this file except in compliance with the License.
--
-- You may obtain a copy of the License, together with FAQs at
-- https://www.defold.com/license
--
-- Unless required by applicable law or agreed to in writing, software distributed
-- under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
-- CONDITIONS OF ANY KIND, either express or implied. See the License for the
-- specific language governing permissions and limitations under the License.

go.property("test_value", vmath.vector3())

function init(self)

    local curve = vmath.vector( { 0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0} )

    go.animate(nil, "test_value", go.PLAYBACK_ONCE_FORWARD, vmath.vector3(1, 1, 0), curve, 0.2, 0, function(s1,url1,hash1)
        go.animate(nil, "test_value", go.PLAYBACK_ONCE_FORWARD, vmath.vector3(0, 0, 0), go.EASING_LINEAR, 0.2, 0, function(s2,url2,hash2)
            go.animate(nil, "test_value", go.PLAYBACK_ONCE_FORWARD, vmath.vector3(-1, -1, 0), curve, 0.2, 0, function(s3,url3,hash3)

            end)
        end)
    end)

    self.frame = 0
    self.timer = 0
end

function update(self, dt)
    if self.timer <= 0.2 then
        assert(self.test_value.x <=  1.0)
        assert(self.test_value.x >=  0.0)
    elseif self.timer <= 0.4 then
        assert(self.test_value.x <=  1.0)
        assert(self.test_value.x >=  0.0)
    elseif self.timer <= 0.6 then
        assert(self.test_value.x <=  0.0)
        assert(self.test_value.x >= -1.0)
    else
        assert(-1 == self.test_value.x)
    end
    self.timer = self.timer + dt
    self.frame = self.frame + 1
end