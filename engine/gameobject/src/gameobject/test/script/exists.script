-- Copyright 2020-2024 The Defold Foundation
-- Copyright 2014-2020 King
-- Copyright 2009-2014 Ragnar Svensson, Christian Murray
-- Licensed under the Defold License version 1.0 (the "License"); you may not use
-- this file except in compliance with the License.
-- 
-- You may obtain a copy of the License, together with FAQs at
-- https://www.defold.com/license
-- 
-- Unless required by applicable law or agreed to in writing, software distributed
-- under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
-- CONDITIONS OF ANY KIND, either express or implied. See the License for the
-- specific language governing permissions and limitations under the License.

function init(self)
    assert(go.exists("a"), "Expected go 'a' to exist")
    assert(go.exists("b"), "Expected go 'b' to exist")
    assert(go.exists(hash("a")), "Expected go hash('a') to exist")
    assert(go.exists(hash("b")), "Expected go hash('b') to exist")
    assert(go.exists(msg.url(nil, "a", nil)), "Expected go msg.url(nil, 'a', nil) to exist")
    assert(go.exists(msg.url(nil, "b", nil)), "Expected go msg.url(nil, 'b', nil) to exist")
    assert(not go.exists("unknown"), "Expected go 'unknown' to not exist")
    if pcall(go.exists, nil) then
        assert(false, "Error expected if call go.exists with nil")
    end
    assert(go.exists(), "Object itself always exists")
end
