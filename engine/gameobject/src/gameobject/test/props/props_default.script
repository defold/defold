-- Copyright 2020-2025 The Defold Foundation
-- Copyright 2014-2020 King
-- Copyright 2009-2014 Ragnar Svensson, Christian Murray
-- Licensed under the Defold License version 1.0 (the "License"); you may not use
-- this file except in compliance with the License.
--
-- You may obtain a copy of the License, together with FAQs at
-- https://www.defold.com/license
--
-- Unless required by applicable law or agreed to in writing, software distributed
-- under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
-- CONDITIONS OF ANY KIND, either express or implied. See the License for the
-- specific language governing permissions and limitations under the License.

go.property("number", 100)
go.property("number1", 1.0)
go.property("number2", .1)
go.property("number3", -1.e-1)
go.property("url", msg.url("url"))
go.property("url1", msg.url())
go.property("url2", msg.url(""))
go.property("hash", hash("hash"))
go.property("hash1", hash(""))
go.property("vec3", vmath.vector3(1, 2, 3))
go.property("vec4", vmath.vector4(4, 5, 6, 7))
go.property("quat", vmath.quat(8, 9, 10, 11))
go.property("quat2", vmath.quat())
go.property("bool", true)
go.property("material", resource.material())

function init(self)
    assert(self.number == 100)
    assert(self.number1 == 1.0)
    local epsilon = 0.0000001
    assert(math.abs(self.number2 - .1) < epsilon)
    assert(math.abs(self.number3 - -1.e-1) < epsilon)
    assert(self.url == msg.url("url"))
    assert(self.url1 == msg.url())
    assert(self.url2 == msg.url(""))
    assert(self.hash == hash("hash"))
    assert(self.hash1 == hash(""))
    assert(self.vec3.x == 1)
    assert(self.vec3.y == 2)
    assert(self.vec3.z == 3)
    assert(self.vec4.x == 4)
    assert(self.vec4.y == 5)
    assert(self.vec4.z == 6)
    assert(self.vec4.w == 7)
    assert(self.quat.x == 8)
    assert(self.quat.y == 9)
    assert(self.quat.z == 10)
    assert(self.quat.w == 11)
    assert(self.quat2 == vmath.quat())
    assert(self.bool)
    assert(self.material)
end
