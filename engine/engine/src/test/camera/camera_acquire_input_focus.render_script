-- Copyright 2020-2024 The Defold Foundation
-- Copyright 2014-2020 King
-- Copyright 2009-2014 Ragnar Svensson, Christian Murray
-- Licensed under the Defold License version 1.0 (the "License"); you may not use
-- this file except in compliance with the License.
--
-- You may obtain a copy of the License, together with FAQs at
-- https://www.defold.com/license
--
-- Unless required by applicable law or agreed to in writing, software distributed
-- under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
-- CONDITIONS OF ANY KIND, either express or implied. See the License for the
-- specific language governing permissions and limitations under the License.

function init(self)
    self.cameras = {}
end

function update(self)
    -- cameras are added by the order of camera_1, camera_2 and camera_3,
    -- meaning that camera_3 will be on top of the camera focus stack, then camera_2 and lastly camera_1
    assert(self.cameras[1] == hash("/camera_3"))
    assert(self.cameras[2] == hash("/camera_2"))
    assert(self.cameras[3] == hash("/camera_1"))

    msg.post("@system:", "exit", { code = 0 })
end

function on_message(self, message_id, message, sender)
    if message_id == hash("set_view_projection") then
        table.insert(self.cameras, sender.path)
    end
end
