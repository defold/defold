name: Build SheenBidi

on:
  workflow_dispatch:

env:
  DM_PACKAGES_URL: ${{ secrets.DM_PACKAGES_URL }}
  SHEENBIDI_VERSION: 2.9.0

jobs:
  build-linux:
    strategy:
      matrix:
        platform: [ x86_64-linux ]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          ref: "${{ env.BUILD_BRANCH }}"

      - name: Install Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: 3.13

      - name: Install dependencies
        run: ci/ci.sh install --platform=${{ matrix.platform }}

      - name: Build SheenBidi
        shell: bash
        run: |
          set -euo pipefail
          ./scripts/build.py --save-env-path=ci/env.sh save_env
          source ci/env.sh
          echo "DYNAMO_HOME=$DYNAMO_HOME"
          ./scripts/build.py install_waf
          cd external/sheenbidi

          waf distclean || true
          PREFIX="$DYNAMO_HOME" waf configure --platform=${{ matrix.platform }}
          waf install

          echo "Final package includes:"
          tar -tzf "build/SheenBidi-${{ env.SHEENBIDI_VERSION }}-${{ matrix.platform }}.tar.gz" | grep -E 'libsheenbidi\.(a|lib)' || true

      - name: Archive results (common)
        uses: actions/upload-artifact@v4
        with:
          name: sheenbidi-${{ env.SHEENBIDI_VERSION }}-common.tar.gz
          path: external/sheenbidi/build/SheenBidi-${{ env.SHEENBIDI_VERSION }}-common.tar.gz
          if-no-files-found: error
          retention-days: 1

      - name: Archive results (platform-specific)
        uses: actions/upload-artifact@v4
        with:
          name: sheenbidi-${{ env.SHEENBIDI_VERSION }}-${{ matrix.platform }}.tar.gz
          path: external/sheenbidi/build/SheenBidi-${{ env.SHEENBIDI_VERSION }}-${{ matrix.platform }}.tar.gz
          if-no-files-found: error
          retention-days: 1

  build-linux-arm:
    strategy:
      matrix:
        platform: [ arm64-linux ]
    runs-on: ubuntu-22.04-arm
    steps:
      - name: Checkout repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          ref: "${{ env.BUILD_BRANCH }}"

      - name: Install Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: 3.13

      - name: Install dependencies
        run: ci/ci.sh install --platform=${{ matrix.platform }}

      - name: Build SheenBidi
        shell: bash
        run: |
          set -euo pipefail
          ./scripts/build.py --save-env-path=ci/env.sh save_env
          source ci/env.sh
          echo "DYNAMO_HOME=$DYNAMO_HOME"
          ./scripts/build.py install_waf
          cd external/sheenbidi

          waf distclean || true
          PREFIX="$DYNAMO_HOME" waf configure --platform=${{ matrix.platform }}
          waf install

          echo "Final package includes:"
          tar -tzf "build/SheenBidi-${{ env.SHEENBIDI_VERSION }}-${{ matrix.platform }}.tar.gz" | grep -E 'libsheenbidi\.(a|lib)' || true

      - name: Archive results (platform-specific)
        uses: actions/upload-artifact@v4
        with:
          name: sheenbidi-${{ env.SHEENBIDI_VERSION }}-${{ matrix.platform }}.tar.gz
          path: external/sheenbidi/build/SheenBidi-${{ env.SHEENBIDI_VERSION }}-${{ matrix.platform }}.tar.gz
          if-no-files-found: error
          retention-days: 1

  build-macos:
    strategy:
      matrix:
        platform: [ arm64-macos, x86_64-macos ]
    runs-on: macOS-14
    steps:
      - name: Checkout repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          ref: "${{ env.BUILD_BRANCH }}"

      - name: Install Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: 3.13

      - name: Install dependencies
        run: ci/ci.sh install --platform=${{ matrix.platform }}

      - name: Build SheenBidi
        shell: bash
        run: |
          set -euo pipefail
          ./scripts/build.py --save-env-path=ci/env.sh save_env
          source ci/env.sh
          echo "DYNAMO_HOME=$DYNAMO_HOME"
          ./scripts/build.py install_waf
          cd external/sheenbidi

          waf distclean || true
          PREFIX="$DYNAMO_HOME" waf configure --platform=${{ matrix.platform }}
          waf install

          echo "Final package includes:"
          tar -tzf "build/SheenBidi-${{ env.SHEENBIDI_VERSION }}-${{ matrix.platform }}.tar.gz" | grep -E 'libsheenbidi\.(a|lib)' || true

      - name: Archive results (platform-specific)
        uses: actions/upload-artifact@v4
        with:
          name: sheenbidi-${{ env.SHEENBIDI_VERSION }}-${{ matrix.platform }}.tar.gz
          path: external/sheenbidi/build/SheenBidi-${{ env.SHEENBIDI_VERSION }}-${{ matrix.platform }}.tar.gz
          if-no-files-found: error
          retention-days: 1

  build-windows:
    strategy:
      matrix:
        platform: [ win32, x86_64-win32 ]
    runs-on: windows-2025
    steps:
      - name: Checkout repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          ref: "${{ env.BUILD_BRANCH }}"

      - name: Install Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: 3.13

      - name: Install dependencies
        run: ci/ci.sh install --platform=${{ matrix.platform }}
        shell: bash

      - name: Build SheenBidi
        shell: bash
        run: |
          set -euo pipefail

          python ./scripts/build.py --save-env-path=ci/env.sh save_env

          ORIG_PATH="$PATH"
          source ci/env.sh
          export PATH="$ORIG_PATH:$DYNAMO_HOME/ext/bin"

          echo "DYNAMO_HOME=$DYNAMO_HOME"
          python ./scripts/build.py install_waf
          cd external/sheenbidi

          waf distclean || true
          PREFIX="$DYNAMO_HOME" waf configure --platform=${{ matrix.platform }}
          waf install

          echo "Final package includes:"
          tar -tzf "build/SheenBidi-${{ env.SHEENBIDI_VERSION }}-${{ matrix.platform }}.tar.gz" | grep -E 'libsheenbidi\.(a|lib)' || true

      - name: Archive results (platform-specific)
        uses: actions/upload-artifact@v4
        with:
          name: sheenbidi-${{ env.SHEENBIDI_VERSION }}-${{ matrix.platform }}.tar.gz
          path: external/sheenbidi/build/SheenBidi-${{ env.SHEENBIDI_VERSION }}-${{ matrix.platform }}.tar.gz
          if-no-files-found: error
          retention-days: 1

  build-ios:
    strategy:
      matrix:
        platform: [ arm64-ios, x86_64-ios ]
    runs-on: macOS-14
    steps:
      - name: Checkout repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          ref: "${{ env.BUILD_BRANCH }}"

      - name: Install Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: 3.13

      - name: Install dependencies
        run: ci/ci.sh install --platform=${{ matrix.platform }}

      - name: Build SheenBidi
        shell: bash
        run: |
          set -euo pipefail
          ./scripts/build.py --save-env-path=ci/env.sh save_env
          source ci/env.sh
          echo "DYNAMO_HOME=$DYNAMO_HOME"
          ./scripts/build.py install_waf
          cd external/sheenbidi

          waf distclean || true
          PREFIX="$DYNAMO_HOME" waf configure --platform=${{ matrix.platform }}
          waf install

          echo "Final package includes:"
          tar -tzf "build/SheenBidi-${{ env.SHEENBIDI_VERSION }}-${{ matrix.platform }}.tar.gz" | grep -E 'libsheenbidi\.(a|lib)' || true

      - name: Archive results (platform-specific)
        uses: actions/upload-artifact@v4
        with:
          name: sheenbidi-${{ env.SHEENBIDI_VERSION }}-${{ matrix.platform }}.tar.gz
          path: external/sheenbidi/build/SheenBidi-${{ env.SHEENBIDI_VERSION }}-${{ matrix.platform }}.tar.gz
          if-no-files-found: error
          retention-days: 1

  build-android:
    strategy:
      matrix:
        platform: [ arm64-android, armv7-android ]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          ref: "${{ env.BUILD_BRANCH }}"

      - name: Setup NDK (r25b)
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r25b
          add-to-path: false

      - name: Install host deps
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends libc6-dev-i386 gcc-multilib

      - name: Install dependencies
        run: ci/ci.sh install --platform=${{ matrix.platform }}

      - name: Build SheenBidi
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
          ANDROID_NDK_ROOT: ${{ steps.setup-ndk.outputs.ndk-path }}
        shell: bash
        run: |
          set -euo pipefail

          ./scripts/build.py --save-env-path=ci/env.sh save_env
          source ci/env.sh
          echo "DYNAMO_HOME=$DYNAMO_HOME"

          export ANDROID_SDK_ROOT="/usr/local/lib/android/sdk"
          export ANDROID_HOME="$ANDROID_SDK_ROOT"
          export PATH="$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH"

          ./scripts/build.py install_waf
          cd external/sheenbidi

          if [[ "${{ matrix.platform }}" == "arm64-android" ]]; then
            export CC="aarch64-linux-android21-clang"
            export CXX="aarch64-linux-android21-clang++"
          else
            export CC="armv7a-linux-androideabi21-clang"
            export CXX="armv7a-linux-androideabi21-clang++"
          fi

          echo "=== Using NDK at: $ANDROID_NDK_ROOT ==="
          $CC --version

          waf distclean || true
          PREFIX="$DYNAMO_HOME" waf configure --platform=${{ matrix.platform }} -v
          waf -v install

          echo "Final package includes:"
          tar -tzf "build/SheenBidi-${{ env.SHEENBIDI_VERSION }}-${{ matrix.platform }}.tar.gz" | grep -E 'libsheenbidi\.(a|lib)' || true

      - name: Archive results
        uses: actions/upload-artifact@v4
        with:
          name: sheenbidi-${{ env.SHEENBIDI_VERSION }}-${{ matrix.platform }}.tar.gz
          path: external/sheenbidi/build/SheenBidi-${{ env.SHEENBIDI_VERSION }}-${{ matrix.platform }}.tar.gz
          if-no-files-found: error
          retention-days: 1

  build-web:
    strategy:
      matrix:
        platform: [ js-web, wasm-web, wasm_pthread-web ]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          ref: "${{ env.BUILD_BRANCH }}"

      - name: Setup emsdk
        uses: mymindstorm/setup-emsdk@v14
        with:
          version: "4.0.6"

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Install dependencies
        run: ci/ci.sh install --platform=${{ matrix.platform }}

      - name: Build SheenBidi
        shell: bash
        run: |
          set -euo pipefail
          ./scripts/build.py --save-env-path=ci/env.sh save_env
          source ci/env.sh
          echo "DYNAMO_HOME=$DYNAMO_HOME"
          source "$EMSDK/emsdk_env.sh"
          export CC=emcc
          export CXX=em++

          ./scripts/build.py install_waf
          cd external/sheenbidi

          waf distclean || true
          PREFIX="$DYNAMO_HOME" waf configure --platform=${{ matrix.platform }}
          waf install

          echo "Final package includes:"
          tar -tzf "build/SheenBidi-${{ env.SHEENBIDI_VERSION }}-${{ matrix.platform }}.tar.gz" | grep -E 'libsheenbidi\.(a|lib)' || true

      - name: Archive results (platform-specific)
        uses: actions/upload-artifact@v4
        with:
          name: sheenbidi-${{ env.SHEENBIDI_VERSION }}-${{ matrix.platform }}.tar.gz
          path: external/sheenbidi/build/SheenBidi-${{ env.SHEENBIDI_VERSION }}-${{ matrix.platform }}.tar.gz
          if-no-files-found: error
          retention-days: 1
