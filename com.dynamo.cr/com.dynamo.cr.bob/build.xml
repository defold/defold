<project default="dist">
    <property environment="env"/>
    <property name="bob.dir" value="../com.dynamo.cr.bob"/>
    <property name="classes.dir" value="../com.dynamo.cr.bob/build"/>
    <property name="common.dir" value="../com.dynamo.cr.common"/>
    <property name="build_tools.dir" value="../../build_tools"/>

    <path id="classpath">
        <fileset dir="lib" includes="*.jar"/>
        <fileset dir="${common.dir}/ext" includes="protobuf-java*.jar"/>
        <fileset dir="${common.dir}/ext" includes="commons*.jar"/>
        <fileset dir="${common.dir}/ext" includes="vecmath.jar"/>
        <fileset dir="${common.dir}/ext" includes="extender-client-*.jar"/>
        <fileset dir="${common.dir}/ext" includes="snakeyaml-1.24.jar"/>
        <fileset dir="${common.dir}/ext" includes="jsoup-1.11.3.jar"/>
        <fileset dir="${common.dir}/ext/aws" includes="*.jar"/>
        <fileset dir="${bob.dir}/lib" includes="*.jar"/>
    </path>

    <macrodef name="proto">
        <attribute name="dir"/>
        <attribute name="file"/>

        <sequential>
            <mkdir dir="generated"/>
            <exec executable="${env.DYNAMO_HOME}/ext/bin/${host.platform}/protoc" failonerror="true">
                <arg value="--java_out=generated"/>
                <arg value="-I@{dir}"/>
                <arg value="-I${env.DYNAMO_HOME}/ext/include"/>
                <arg value="-I../../engine/gameobject/proto" />
                <arg value="-I../../engine/script/src" />
                <arg value="-I../../engine/ddf/src"/>
                <arg value="-I../../engine/graphics/proto" />
                <arg value="@{dir}/@{file}"/>
            </exec>
        </sequential>
    </macrodef>

    <target name="get-host-platform">
        <exec executable="python" outputproperty="host.platform">
            <arg value="-c"/>
            <arg value="import sys; sys.path.append('${build_tools.dir}'); import sdk; print(sdk.get_host_platform())"/>
        </exec>
        <echo>Host Platform: ${host.platform}</echo>
    </target>

    <target name="clean">
        <delete dir="${classes.dir}"/>
        <delete dir="${bob.dir}/generated"/>
        <delete dir="${bob.dir}/dist"/>
        <delete dir="${bob.dir}/tmp"/>
        <delete file="${bob.dir}/lib/luajit-share.zip"/>
    </target>

    <target name="git.revision" description="Store git revision in ${repository.version}">
        <exec executable="git" outputproperty="git.revision" failifexecutionfails="true" errorproperty="">
            <arg value="log" />
            <arg value="--pretty=%H" />
            <arg value="-n1" />
        </exec>
    </target>

    <target name="compile-bob-light" depends="git.revision, get-host-platform">
        <mkdir dir="${classes.dir}"/>
        <!-- NOTE: We force thread-count 10 here in order to reduce latency
             Running external processes in Java is slow -->
        <parallel threadCount="20">
            <proto dir="../../engine/ddf/src" file="ddf/ddf_extensions.proto"/>
            <proto dir="../../engine/ddf/src" file="ddf/ddf_math.proto"/>
            <proto dir="../../engine/engine/proto" file="engine/engine_ddf.proto"/>
            <proto dir="../../engine/graphics/proto" file="graphics/graphics_ddf.proto"/>
            <proto dir="../../engine/gameobject/proto" file="gameobject/properties_ddf.proto"/>
            <proto dir="../../engine/gameobject/proto" file="gameobject/gameobject_ddf.proto"/>
            <proto dir="../../engine/gameobject/proto" file="gameobject/lua_ddf.proto"/>
            <proto dir="../../engine/gamesys/proto" file="gamesys/atlas_ddf.proto"/>
            <proto dir="../../engine/gamesys/proto" file="gamesys/camera_ddf.proto"/>
            <proto dir="../../engine/gamesys/proto" file="gamesys/gamesys_ddf.proto"/>
            <proto dir="../../engine/gamesys/proto" file="gamesys/gui_ddf.proto"/>
            <proto dir="../../engine/gamesys/proto" file="gamesys/label_ddf.proto"/>
            <proto dir="../../engine/gamesys/proto" file="gamesys/model_ddf.proto"/>
            <proto dir="../../engine/gamesys/proto" file="gamesys/physics_ddf.proto"/>
            <proto dir="../../engine/gamesys/proto" file="gamesys/sound_ddf.proto"/>
            <proto dir="../../engine/gamesys/proto" file="gamesys/sprite_ddf.proto"/>
            <proto dir="../../engine/gamesys/proto" file="gamesys/texture_set_ddf.proto"/>
            <proto dir="../../engine/gamesys/proto" file="gamesys/tile_ddf.proto"/>
            <proto dir="../../engine/gamesys/proto" file="gamesys/mesh_ddf.proto"/>
            <proto dir="../../engine/gamesys/proto" file="gamesys/buffer_ddf.proto"/>
            <proto dir="../../engine/rig/proto" file="rig/rig_ddf.proto"/>
            <proto dir="../../engine/input/proto" file="input/input_ddf.proto"/>
            <proto dir="../../engine/particle/proto" file="particle/particle_ddf.proto"/>
            <proto dir="../../engine/render/proto" file="render/font_ddf.proto"/>
            <proto dir="../../engine/render/proto" file="render/material_ddf.proto"/>
            <proto dir="../../engine/render/proto" file="render/render_ddf.proto"/>
            <proto dir="../../engine/render/proto" file="render/render_target_ddf.proto"/>
            <proto dir="../../engine/render/proto" file="render/compute_ddf.proto"/>
            <proto dir="../../engine/resource/proto" file="resource/liveupdate_ddf.proto"/>
            <proto dir="../../engine/resource/proto" file="resource/resource_ddf.proto"/>
            <proto dir="../../engine/script/src" file="script/script_doc_ddf.proto"/>
            <proto dir="../../engine/script/src" file="script/lua_source_ddf.proto"/>
            <proto dir="../../engine/script/src" file="script/ddf_script.proto"/>
            <proto dir="../../engine/script/src" file="script/sys_ddf.proto"/>
        </parallel>

        <exec dir="." executable="python">
            <arg line="${bob.dir}/engine_version_generator.py" />
        </exec>
        <copy todir="${bob.dir}/lib" overwrite="true" flatten="true" failonerror="false">
            <fileset dir="${env.DYNAMO_HOME}/share">
                <include name="java/dlib.jar"/>
                <include name="java/modelimporter.jar"/>
                <include name="java/texturecompiler.jar"/>
            </fileset>
        </copy>
        <fail message="dlib.jar is missing">
            <condition>
                <resourcecount count="0">
                    <fileset dir="${bob.dir}/lib" includes="dlib.jar" />
                </resourcecount>
            </condition>
        </fail>
        <fail message="modelimporter.jar is missing">
            <condition>
                <resourcecount count="0">
                    <fileset dir="${bob.dir}/lib" includes="modelimporter.jar" />
                </resourcecount>
            </condition>
        </fail>
        <fail message="texturecompiler.jar is missing">
            <condition>
                <resourcecount count="0">
                    <fileset dir="${bob.dir}/lib" includes="texturecompiler.jar" />
                </resourcecount>
            </condition>
        </fail>

        <copy todir="${bob.dir}/libexec/x86_64-macos" overwrite="true" flatten="true">
            <fileset dir="${env.DYNAMO_HOME}/ext/bin/x86_64-macos">
                <include name="glslc"/>
                <include name="spirv-cross"/>
                <include name="spirv-opt"/>
                <include name="luajit-32"/>
                <include name="luajit-64"/>
                <include name="lipo"/>
            </fileset>
        </copy>
        <copy todir="${bob.dir}/libexec/arm64-macos" overwrite="true" flatten="true">
            <fileset dir="${env.DYNAMO_HOME}/ext/bin/arm64-macos">
                <include name="glslc"/>
                <include name="spirv-cross"/>
                <include name="spirv-opt"/>
                <include name="luac-32"/>
                <include name="luajit-64"/>
                <include name="lipo"/>
            </fileset>
        </copy>
        <copy todir="${bob.dir}/libexec/x86_64-linux" overwrite="true" flatten="true">
            <fileset dir="${env.DYNAMO_HOME}/ext/bin/x86_64-linux">
                <include name="glslc"/>
                <include name="spirv-cross"/>
                <include name="spirv-opt"/>
                <include name="luajit-32"/>
                <include name="luajit-64"/>
                <include name="lipo"/>
            </fileset>
        </copy>
        <copy todir="${bob.dir}/libexec/x86_64-win32" overwrite="true" flatten="true">
            <fileset dir="${env.DYNAMO_HOME}/ext/bin/x86_64-win32">
                <include name="glslc.exe"/>
                <include name="spirv-cross.exe"/>
                <include name="spirv-opt.exe"/>
                <include name="luajit-64.exe"/>
                <include name="lipo.exe"/>
            </fileset>
            <fileset dir="${env.DYNAMO_HOME}/ext/bin/win32">
                <include name="luajit-32.exe"/>
            </fileset>
        </copy>
        <copy todir="${bob.dir}/libexec/x86-win32" overwrite="true" flatten="true">
            <fileset dir="${env.DYNAMO_HOME}/ext/bin/win32">
                <include name="glslc.exe"/>
                <include name="spirv-cross.exe"/>
                <include name="spirv-opt.exe"/>
            </fileset>
        </copy>

        <copy todir="${bob.dir}/libexec" overwrite="true">
            <chainedmapper>
                <cutdirsmapper dirs="1"/>
                <compositemapper>
                    <!-- Symlinks do not seem to make it through this process, so we map from versioned name
                         to the final name. Only files that are matched by either glob below are included in
                         the copy -->
                    <globmapper from="x86_64-macos/luajit-2.1.0-beta3-32" to="x86_64-macos/luajit-32"/>
                    <globmapper from="x86_64-macos/luajit-2.1.0-beta3-64" to="x86_64-macos/luajit-64"/>
                    <globmapper from="arm64-macos/luajit-2.1.0-beta3-32" to="arm64-macos/luajit-32"/>
                    <globmapper from="arm64-macos/luajit-2.1.0-beta3-64" to="arm64-macos/luajit-64"/>
                    <globmapper from="x86_64-linux/luajit-2.1.0-beta3-32" to="x86_64-linux/luajit-32"/>
                    <globmapper from="x86_64-linux/luajit-2.1.0-beta3-64" to="x86_64-linux/luajit-64"/>
                    <globmapper from="x86_64-win32/luajit-32.exe" to="x86_64-win32/luajit-32.exe"/>
                    <globmapper from="x86_64-win32/luajit-64.exe" to="x86_64-win32/luajit-64.exe"/>
                </compositemapper>
            </chainedmapper>
            <tarfileset includes="bin/x86_64-linux/**">
                <gzipresource>
                    <file file="../../packages/luajit-2.1.0-6c4826f-x86_64-linux.tar.gz" />
                </gzipresource>
            </tarfileset>
            <tarfileset includes="bin/x86_64-win32/**">
                <gzipresource>
                    <file file="../../packages/luajit-2.1.0-6c4826f-x86_64-win32.tar.gz" />
                </gzipresource>
            </tarfileset>
            <tarfileset includes="bin/x86_64-macos/**">
                <gzipresource>
                    <file file="../../packages/luajit-2.1.0-6c4826f-x86_64-macos.tar.gz" />
                </gzipresource>
            </tarfileset>
            <tarfileset includes="bin/arm64-macos/**">
                <gzipresource>
                    <file file="../../packages/luajit-2.1.0-6c4826f-arm64-macos.tar.gz" />
                </gzipresource>
            </tarfileset>
        </copy>

        <javac srcdir="generated"
               destdir="${classes.dir}"
               includeantruntime="false"
               encoding="UTF-8">
            <classpath>
                <path refid="classpath"/>
            </classpath>
            <compilerarg value="-g"/>
        </javac>

        <javac destdir="${classes.dir}"
               includeantruntime="false"
               debug="true"
               encoding="UTF-8">
            <src path="${bob.dir}/src"/>
            <include name="com/**"/>

            <classpath>
                <path refid="classpath"/>
            </classpath>
            <compilerarg value="-g"/>
        </javac>

        <copy todir="${classes.dir}" overwrite="true">
            <fileset dir="${bob.dir}/src" includes="**">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>

        <!-- NOTE: Given that we don't (yet) use qualifed platforms
             for "installed" libraries we can't do a general glob-copy here,
             e.g. **/*texc_shared* -->
        <copy todir="${bob.dir}/lib/x86_64-macos" overwrite="true" flatten="true">
            <fileset dir="${env.DYNAMO_HOME}/lib">
                <include name="x86_64-macos/*texc_shared*"/>
                <include name="x86_64-macos/*modelc_shared*"/>
                <exclude name="**/*dSYM.zip"/>
            </fileset>
        </copy>
        <copy todir="${bob.dir}/lib/arm64-macos" overwrite="true" flatten="true">
            <fileset dir="${env.DYNAMO_HOME}/lib">
                <include name="arm64-macos/*texc_shared*"/>
                <include name="arm64-macos/*modelc_shared*"/>
            </fileset>
        </copy>
        <copy todir="${bob.dir}/lib/x86_64-linux" overwrite="true" flatten="true">
            <fileset dir="${env.DYNAMO_HOME}/lib">
                <include name="x86_64-linux/*texc_shared*"/>
                <include name="x86_64-linux/*modelc_shared*"/>
                <exclude name="**/*dSYM.zip"/>
            </fileset>
        </copy>
        <copy todir="${bob.dir}/lib/x86-win32" overwrite="true" flatten="true">
            <fileset dir="${env.DYNAMO_HOME}/lib">
              <include name="win32/*texc_shared*"/>
              <include name="win32/*modelc_shared*"/>
                <exclude name="**/*dSYM.zip"/>
            </fileset>
        </copy>
        <copy todir="${bob.dir}/lib/x86_64-win32" overwrite="true" flatten="true">
            <fileset dir="${env.DYNAMO_HOME}/lib">
                <include name="x86_64-win32/*texc_shared*"/>
                <include name="x86_64-win32/*modelc_shared*"/>
                <exclude name="**/*dSYM.zip"/>
            </fileset>
        </copy>
<!--         <copy todir="${bob.dir}/lib/x86_64-win32" overwrite="true" flatten="true">
            <fileset dir="${env.DYNAMO_HOME}/ext/lib">
            </fileset>
        </copy> -->
        <jar destfile="${bob.dir}/lib/luajit-share.zip">
             <fileset dir="${env.DYNAMO_HOME}/ext/share">
                 <include name="luajit/**"/>
             </fileset>
        </jar>

    </target>

    <target name="compile" depends="compile-bob-light">
        <jar destfile="${bob.dir}/lib/android-res.zip">
             <fileset dir="${env.DYNAMO_HOME}/ext/share/java">
                 <include name="res/**"/>
             </fileset>
        </jar>
        <copy todir="${bob.dir}/lib/x86-win32" overwrite="true" flatten="true">
            <fileset dir="${env.DYNAMO_HOME}/ext/lib">
                <include name="win32/OpenAL32.dll"/>
                <include name="win32/wrap_oal.dll"/>
            </fileset>
        </copy>
        <copy todir="${bob.dir}/lib/x86_64-win32" overwrite="true" flatten="true">
            <fileset dir="${env.DYNAMO_HOME}/ext/lib">
                <include name="x86_64-win32/OpenAL32.dll"/>
                <include name="x86_64-win32/wrap_oal.dll"/>
            </fileset>
        </copy>
    </target>

    <target name="dist-bob-light" depends="compile-bob-light">
        <mkdir dir="${bob.dir}/dist"/>
        <mkdir dir="${bob.dir}/tmp"/>

        <jar jarfile="${bob.dir}/tmp/external-libs-light.jar">
            <zipgroupfileset dir="${common.dir}/ext">
              <include name="protobuf-java*.jar"/>
              <include name="commons*.jar"/>
              <include name="vecmath.jar"/>
              <include name="extender-client-*.jar"/>
              <include name="snakeyaml-1.24.jar"/>
              <include name="jsoup-1.11.3.jar"/>
              <include name="httpcore-4.1.4.jar"/>
            </zipgroupfileset>
            <zipgroupfileset dir="${bob.dir}/lib">
              <include name="dlib.jar"/>
              <include name="modelimporter.jar"/>
              <include name="texturecompiler.jar"/>
              <include name="lz4-1.9.0.jar"/>
              <include name="commons-cli-1.2.jar"/>
              <include name="jna-5.13.0.jar"/>
              <include name="jna-platform-5.13.0.jar"/>
              <include name="jackson-core-asl-1.9.2.jar"/>
              <include name="jackson-mapper-asl-1.9.2.jar"/>
              <include name="openmali.jar"/>
              <include name="snakeyaml-1.24.jar"/>
              <include name="jsoup-1.11.3.jar"/>
              <include name="jaxb-api-2.3.0.jar"/>
              <include name="jaxb-core-2.3.0.jar"/>
              <include name="jaxb-impl-2.3.0.jar"/>
              <include name="antlr-runtime-4.9.1.jar"/>
              <include name="jmustache-1.8.jar"/>
            </zipgroupfileset>
         </jar>

        <jar destfile="${bob.dir}/dist/bob-light.jar">
            <fileset dir="${classes.dir}"/>
            <fileset dir="${bob.dir}">
                <include name="lib/**/*texc_shared*"/>
                <include name="lib/**/*modelc_shared*"/>
                <exclude name="**/*dSYM.zip"/>
            </fileset>

            <fileset dir="${bob.dir}">
                <include name="libexec/**/glslc*"/>
                <include name="libexec/**/spirv-cross*"/>
                <include name="libexec/**/spirv-opt*"/>
                <include name="libexec/**/luajit*"/>
            </fileset>
            <zipfileset src="${bob.dir}/tmp/external-libs-light.jar">
              <exclude name="**/META-INF/**"/>
            </zipfileset>

            <fileset dir="${bob.dir}">
                <include name="lib/luajit-share.zip"/>
            </fileset>

            <manifest>
                <attribute name="Main-Class" value="com.dynamo.bob.Bob"/>
                <attribute name="is-bob-light" value="true"/>
            </manifest>
        </jar>
    </target>

    <target name="dist" depends="compile">
        <mkdir dir="${bob.dir}/dist"/>
        <mkdir dir="${bob.dir}/tmp"/>

        <jar jarfile="${bob.dir}/tmp/external-libs-builtins.jar">
            <zipgroupfileset dir="${common.dir}/ext">
              <include name="protobuf-java*.jar"/>
              <include name="commons*.jar"/>
              <include name="vecmath.jar"/>
              <include name="extender-client-*.jar"/>
              <include name="snakeyaml-1.24.jar"/>
              <include name="jsoup-1.11.3.jar"/>
            </zipgroupfileset>
            <zipgroupfileset dir="${common.dir}/ext/aws">
                <include name="*.jar" />
            </zipgroupfileset>
            <zipgroupfileset dir="${bob.dir}/lib">
                <include name="*.jar"/>
                <exclude name="android.jar"/>
            </zipgroupfileset>
         </jar>

        <jar destfile="${bob.dir}/dist/bob.jar">
            <fileset dir="${classes.dir}"/>
            <fileset dir="${bob.dir}">
                <include name="lib/**/*texc_shared*"/>
                <include name="lib/**/*modelc_shared*"/>
                <include name="lib/**/*libc++*"/>
                <include name="lib/*win32/OpenAL32.dll"/>
                <include name="lib/*win32/wrap_oal.dll"/>
                <exclude name="**/*dSYM.zip"/>
            </fileset>
            <fileset dir="${bob.dir}">
                <include name="libexec/**/*"/>
            </fileset>
            <fileset dir="${bob.dir}">
                <include name="lib/report_template.html"/>
            </fileset>
            <fileset dir="${bob.dir}">
                <include name="lib/time_report_template.html"/>
            </fileset>
            <zipfileset src="${bob.dir}/lib/builtins.zip"/>
            <zipfileset src="${bob.dir}/tmp/external-libs-builtins.jar">
              <exclude name="**/META-INF/**"/>
            </zipfileset>
            <fileset dir="${bob.dir}">
                <include name="lib/android.jar"/>
                <include name="lib/classes.dex"/>
                <include name="lib/*.zip"/>
            </fileset>
            <manifest>
                <attribute name="Main-Class" value="com.dynamo.bob.Bob"/>
            </manifest>
        </jar>
    </target>

    <target name="install-bob-light" depends="dist-bob-light">
        <copy file="${bob.dir}/dist/bob-light.jar" todir="${env.DYNAMO_HOME}/share/java"/>
    </target>

    <target name="install" depends="dist">
        <copy file="${bob.dir}/dist/bob.jar" todir="${env.DYNAMO_HOME}/share/java"/>
    </target>

</project>
