name: macOS CI

on:
  push:
    branches: [master, develop]
    paths-ignore:
      - '*.md'
  pull_request:
    types: [opened, synchronize]
    paths-ignore:
      - '*.md'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  cmake:
    name: CMake - ${{ matrix.name }}
    runs-on: macos-latest

    strategy:
      matrix:
        include:
          - compiler: gcc
            name: GCC
          - compiler: clang
            name: Clang

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Compiler
        run: |
          if [ "${{ matrix.compiler }}" = "gcc" ]; then
            echo "CC=gcc" >> $GITHUB_ENV
            echo "CXX=g++" >> $GITHUB_ENV
          else
            echo "CC=clang" >> $GITHUB_ENV
            echo "CXX=clang++" >> $GITHUB_ENV
          fi

      - name: Build in Release Mode
        continue-on-error: true
        run: |
          cmake -S . -B build-release \
            -DSB_CONFIG_UNITY=ON \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_C_STANDARD=90 \
            -DCMAKE_C_EXTENSIONS=OFF \
            -DCMAKE_C_STANDARD_REQUIRED=ON
          cmake --build build-release

      - name: Build in Debug mode
        run: |
          cmake -S. -B build-debug \
            -DSB_CONFIG_UNITY=OFF \
            -DENABLE_ASAN=ON \
            -DENABLE_UBSAN=ON \
            -DCMAKE_BUILD_TYPE=Debug \
            -DCMAKE_C_STANDARD=90 \
            -DCMAKE_C_EXTENSIONS=OFF \
            -DCMAKE_C_STANDARD_REQUIRED=ON
          cmake --build build-debug

      - name: Run Tests (Debug)
        run: ctest --test-dir build-debug --output-on-failure

  meson:
    name: Meson - ${{ matrix.name }}
    runs-on: macos-latest

    strategy:
      matrix:
        include:
          - compiler: gcc
            name: GCC
          - compiler: clang
            name: Clang

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: python -m pip install meson ninja

      - name: Setup Compiler
        run: |
          if [ "${{ matrix.compiler }}" = "gcc" ]; then
            echo "CC=gcc" >> $GITHUB_ENV
            echo "CXX=g++" >> $GITHUB_ENV
          else
            echo "CC=clang" >> $GITHUB_ENV
            echo "CXX=clang++" >> $GITHUB_ENV
          fi

      - name: Build in Release mode
        continue-on-error: true
        run: |
          meson setup build-release \
            --buildtype release \
            -Dunity_mode=enabled \
            -Dc_std=c89
          meson compile -C build-release

      - name: Build in Debug mode
        run: |
          meson setup build-debug \
            --buildtype debugoptimized \
            -Dunity_mode=disabled \
            -Db_sanitize=address,undefined \
            -Db_lundef=false \
            -Dc_std=c89
          meson compile -C build-debug

      - name: Run Tests (Debug)
        run: meson test --print-errorlogs -C build-debug
