##########################################################################
# Makefile for GLFW test programs on Windows using Cygwin
#-------------------------------------------------------------------------
# To compile the test files using this makefile, run:
#  make -f Makefile.win32.cygwin
##########################################################################

CC     = gcc
CFLAGS = -I../include -Wall -O2 -mwin32 -mno-cygwin

LIB       = ../lib/win32/libglfw.a
SOLIB     = ../lib/win32/libglfwdll.a
LFLAGS    = -mno-cygwin $(LIB) -lglu32 -lopengl32 
SO_LFLAGS = -mno-cygwin $(SOLIB) -lglu32 -lopengl32 

WINDOWS = -mwindows -e _mainCRTStartup
CONSOLE = -mconsole

BINARIES = accuracy.exe defaults.exe dynamic.exe events.exe fsaa.exe \
	   fsinput.exe iconify.exe joysticks.exe peter.exe reopen.exe \
	   tearing.exe version.exe

HEADER = ../include/GL/glfw.h

all: $(BINARIES)

accuracy.exe: accuracy.c $(LIB) $(HEADER)
	$(CC) $(CFLAGS) $(WINDOWS) accuracy.c $(LFLAGS) -o $@

defaults.exe: defaults.c $(LIB) $(HEADER)
	$(CC) $(CFLAGS) $(CONSOLE) defaults.c $(LFLAGS) -o $@

dynamic.exe: dynamic.c $(SOLIB) $(HEADER)
	$(TARGET)$(CC) $(CFLAGS) $(WINDOWS) dynamic.c $(SO_LFLAGS) -o $@

events.exe: events.c $(LIB) $(HEADER)
	$(CC) $(CFLAGS) $(CONSOLE) events.c $(LFLAGS) -o $@

fsaa.exe: fsaa.c $(LIB) $(HEADER)
	$(CC) $(CFLAGS) $(CONSOLE) fsaa.c $(LFLAGS) -lm -o $@

fsinput.exe: fsinput.c $(LIB) $(HEADER)
	$(CC) $(CFLAGS) $(WINDOWS) fsinput.c $(LFLAGS) -lm -o $@

iconify.exe: iconify.c getopt.c $(LIB) $(HEADER)
	$(TARGET)$(CC) $(CFLAGS) $(CONSOLE) iconify.c getopt.c $(LFLAGS) -o $@

joysticks.exe: joysticks.c $(LIB) $(HEADER)
	$(CC) $(CFLAGS) $(CONSOLE) joysticks.c $(LFLAGS) -lm -o $@

peter.exe: peter.c $(LIB) $(HEADER)
	$(CC) $(CFLAGS) $(CONSOLE) peter.c $(LFLAGS) -o $@

reopen.exe: reopen.c $(LIB) $(HEADER)
	$(CC) $(CFLAGS) $(CONSOLE) reopen.c $(LFLAGS) -lm -o $@

tearing.exe: tearing.c $(LIB) $(HEADER)
	$(CC) $(CFLAGS) $(WINDOWS) tearing.c $(LFLAGS) -lm -o $@

version.exe: version.c getopt.c $(LIB) $(HEADER)
	$(CC) $(CFLAGS) $(CONSOLE) version.c getopt.c $(LFLAGS) -lm -o $@

clean:
	rm -f $(BINARIES)

