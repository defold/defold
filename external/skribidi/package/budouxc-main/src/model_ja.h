//
// Genereted with convert.py, do not edit.
//
// Weights for UW1
static uint64_t keys_ja_UW1[] = {
    0x3001, 0x3002, 0x3042, 0x3044, 0x3046, 0x3048, 0x304a, 0x304b, 0x304c, 0x304f, 
    0x3053, 0x3054, 0x3055, 0x3056, 0x3057, 0x3058, 0x3059, 0x305b, 0x305d, 0x3060, 
    0x3061, 0x3063, 0x3064, 0x3066, 0x3067, 0x3068, 0x306a, 0x306b, 0x306e, 0x306f, 
    0x3075, 0x307e, 0x307f, 0x3081, 0x3082, 0x3084, 0x3086, 0x3089, 0x308a, 0x308b, 
    0x308c, 0x308d, 0x3092, 0x3093, 0x30a4, 0x30b1, 0x30b9, 0x30c1, 0x30c3, 0x30c4, 
    0x30d0, 0x30d1, 0x30d5, 0x30da, 0x30dc, 0x30e1, 0x30e9, 0x30fc, 0x4e0a, 0x4f55, 
    0x4f7f, 0x500b, 0x5165, 0x5229, 0x5238, 0x5468, 0x554f, 0x56f0, 0x56fd, 0x5916, 
    0x597d, 0x5b66, 0x5b89, 0x5c71, 0x5ead, 0x5f53, 0x632f, 0x643a, 0x64ae, 0x65b0, 
    0x65b9, 0x69d8, 0x6a5f, 0x6c34, 0x6d6e, 0x7518, 0x751f, 0x7528, 0x7530, 0x753b, 
    0x767d, 0x7740, 0x793e, 0x7a7a, 0x81ea, 0x898b, 0x8fbc, 0x9023, 0x9577, 0x9593, 
    0x96fb, 0x9762, 0x9ad8, 0xff01, 0xff0e, 0xff10, 0xff13, 0xff1f, 0xff3b, };
static int16_t values_ja_UW1[] = {
    -26, -17, -230, -91, 275, -8, 922, -110, -385, 134, 
    64, 890, -164, 120, -30, -49, 151, 210, 137, 63, 
    285, 194, 241, 60, -127, 165, -220, -344, -31, -273, 
    1899, 128, -8, -12, -96, -42, -428, 72, -102, -34, 
    -44, 303, -176, 289, 211, -196, -251, 183, 117, 134, 
    511, 63, -155, 126, 16, 96, 92, 113, 12, 173, 
    -79, -79, 266, -371, 79, 137, 588, 574, -382, 301, 
    50, 209, -400, 114, 619, -1038, 209, -86, -182, 178, 
    124, 365, 318, 1969, 1464, -1424, 254, 599, 137, -53, 
    -248, -16, 225, -524, 412, 76, 42, -29, 144, 572, 
    127, -306, 170, 65, -72, 275, -258, 113, -601, };

// Weights for UW2
static uint64_t keys_ja_UW2[] = {
    0x3001, 0x3002, 0x3005, 0x300c, 0x3042, 0x3044, 0x3046, 0x304a, 0x304b, 0x304c, 
    0x304d, 0x304f, 0x3051, 0x3053, 0x3054, 0x3055, 0x3057, 0x305c, 0x305d, 0x305f, 
    0x3060, 0x3063, 0x3064, 0x3066, 0x3067, 0x3068, 0x306a, 0x306b, 0x306e, 0x306f, 
    0x3070, 0x3071, 0x3072, 0x3076, 0x307b, 0x307e, 0x307f, 0x3081, 0x3082, 0x3083, 
    0x3086, 0x3088, 0x3089, 0x308a, 0x308b, 0x308c, 0x308d, 0x308f, 0x3092, 0x3093, 
    0x30a3, 0x30a4, 0x30b1, 0x30b9, 0x30d1, 0x30d5, 0x30d7, 0x30e1, 0x30e9, 0x30eb, 
    0x30f3, 0x30fc, 0x4e00, 0x4e09, 0x4e0a, 0x4e0b, 0x4e16, 0x4e57, 0x4eac, 0x4eba, 
    0x4eca, 0x4ee5, 0x5165, 0x5168, 0x516c, 0x51b7, 0x53cb, 0x53d6, 0x540c, 0x540d, 
    0x5834, 0x5915, 0x591a, 0x5927, 0x5973, 0x5b9f, 0x5bb9, 0x5bfa, 0x5c11, 0x5f0f, 
    0x5f53, 0x5f7c, 0x610f, 0x6211, 0x624b, 0x6253, 0x632f, 0x6599, 0x65e5, 0x6700, 
    0x672c, 0x683c, 0x6975, 0x6a5f, 0x6b63, 0x6bce, 0x6c34, 0x7518, 0x7528, 0x7684, 
    0x76ee, 0x76f8, 0x7740, 0x77e5, 0x7acb, 0x7d50, 0x7d76, 0x821e, 0x826f, 0x843d, 
    0x8449, 0x88cf, 0x8eca, 0x904a, 0x9078, 0x91cd, 0x95a2, 0x96fb, 0x984c, 0x98df, 
    0x9ad8, 0xff0c, 0xff14, 0xff1a, 0xff28, 0xff3b, 0xff3d, 0xff3e, 0xff52, };
static int16_t values_ja_UW2[] = {
    -1370, -1401, 80, -482, -233, -79, -489, -711, 18, -653, 
    -556, -812, 16, 161, -682, 922, -49, 567, -534, -109, 
    523, 269, -423, -985, -810, -751, -492, -1207, -695, -1010, 
    -464, 396, -1353, 435, 1001, -173, -123, 81, -813, 283, 
    1668, 577, -91, -479, -207, 5, -4, -118, -2403, 344, 
    -12, -122, -246, 54, 289, -264, -195, -47, -210, 31, 
    167, 274, 1197, 58, -421, 154, -793, -115, -377, 201, 
    276, 2215, -160, 1762, -33, -664, 494, -360, 567, 341, 
    190, 826, 387, 266, -487, 97, 956, -551, 676, 93, 
    94, 754, 531, -1421, 663, 557, -1313, 70, -25, 445, 
    694, 130, 748, 1341, 100, 1671, 335, 227, -161, 42, 
    -1004, 75, -477, -361, -292, 1952, 1181, 2257, 183, -499, 
    787, -1437, 124, -310, 313, 159, 745, 315, 848, 981, 
    498, -306, 20, 106, -84, -16, -50, 149, 990, };

// Weights for UW3
static uint64_t keys_ja_UW3[] = {
    0x201d, 0x2026, 0x2606, 0x266a, 0x3000, 0x3001, 0x3002, 0x3005, 0x300c, 0x300d, 
    0x300f, 0x301c, 0x3041, 0x3042, 0x3044, 0x3046, 0x3048, 0x304a, 0x304b, 0x304c, 
    0x304d, 0x304f, 0x3050, 0x3051, 0x3054, 0x3055, 0x3057, 0x3059, 0x305a, 0x305e, 
    0x305f, 0x3060, 0x3061, 0x3063, 0x3064, 0x3066, 0x3067, 0x3068, 0x3069, 0x306a, 
    0x306b, 0x306e, 0x306f, 0x3070, 0x3071, 0x3073, 0x3076, 0x3078, 0x3079, 0x307e, 
    0x307f, 0x3080, 0x3082, 0x3083, 0x3084, 0x3089, 0x308a, 0x308b, 0x308c, 0x308d, 
    0x3092, 0x3093, 0x30a2, 0x30a4, 0x30ab, 0x30af, 0x30b0, 0x30b5, 0x30b7, 0x30b9, 
    0x30ba, 0x30c3, 0x30c9, 0x30d1, 0x30d5, 0x30d7, 0x30e1, 0x30ea, 0x30ec, 0x30f3, 
    0x30fb, 0x30fc, 0x4e00, 0x4e0a, 0x4e0d, 0x4e2d, 0x4eac, 0x4eba, 0x4eca, 0x4ee5, 
    0x4f53, 0x4fc2, 0x5149, 0x5165, 0x51fa, 0x5206, 0x5225, 0x5229, 0x5473, 0x5834, 
    0x5909, 0x591c, 0x5927, 0x5b66, 0x5bfa, 0x5c4b, 0x5e74, 0x5e97, 0x5ea6, 0x5f53, 
    0x5f8c, 0x5fdc, 0x60f3, 0x610f, 0x611f, 0x614b, 0x6240, 0x6307, 0x6599, 0x65b9, 
    0x65e5, 0x6614, 0x6708, 0x6709, 0x671d, 0x679c, 0x6a5f, 0x6bb5, 0x6c17, 0x6c34, 
    0x7136, 0x751f, 0x7531, 0x756a, 0x7686, 0x7740, 0x795e, 0x79cb, 0x79fb, 0x7a0b, 
    0x7a7a, 0x7b11, 0x80fd, 0x81ea, 0x8272, 0x884c, 0x898b, 0x89b3, 0x8a00, 0x8a9e, 
    0x8d85, 0x90e8, 0x9593, 0x96fb, 0x975e, 0x9762, 0x982d, 0x984c, 0x98df, 0xff01, 
    0xff09, 0xff0c, 0xff0e, 0xff10, 0xff11, 0xff1a, 0xff1e, 0xff1f, 0xff3b, 0xff3d, 
    0xff4f, };
static int16_t values_ja_UW3[] = {
    215, 2428, 2675, 2714, 257, 4784, 6699, 1435, -1434, 1608, 
    1404, 489, 1322, 1179, 1855, 2242, 728, -1495, 1899, 4162, 
    530, 2902, 2053, 159, -2327, -599, 181, 938, 1456, 825, 
    2217, 866, 363, -1853, 1078, 2447, 3372, 2900, 992, 2357, 
    3897, 3706, 4221, 1790, 454, 514, 672, 2073, -711, -370, 
    275, 920, 3155, 1112, 2149, 1353, 1013, 2971, 295, 1142, 
    5769, 967, -700, -568, -102, 335, 12, 33, -1196, -901, 
    304, -2137, -995, -29, -1285, -718, -136, -636, -54, -284, 
    1074, -102, -50, 428, -93, 998, -1396, 486, 1080, -1870, 
    1000, 701, -218, -819, -160, 1111, 285, -681, 101, -794, 
    328, 1480, -1134, -552, 50, 338, 344, 203, 982, -337, 
    1224, 149, 398, -477, 1389, -749, 189, -240, -76, 2814, 
    713, 1287, 584, -16, 270, 767, -463, 13, 130, 54, 
    515, -160, 680, 252, 1294, -149, -111, 1464, -635, 145, 
    902, 2335, -710, -352, 469, -725, 160, -976, -419, 159, 
    976, 1732, 752, -1669, 768, 475, 486, 1113, -517, 3252, 
    2573, 3358, 2093, -870, -550, 94, 588, 3703, -960, 2166, 
    -520, };

// Weights for UW4
static uint64_t keys_ja_UW4[] = {
    0x201d, 0x2026, 0x2606, 0x266a, 0x3000, 0x3001, 0x3002, 0x3005, 0x300c, 0x300d, 
    0x300f, 0x301c, 0x3041, 0x3042, 0x3044, 0x3046, 0x3048, 0x304a, 0x304b, 0x304c, 
    0x304d, 0x304e, 0x304f, 0x3050, 0x3051, 0x3052, 0x3053, 0x3054, 0x3055, 0x3056, 
    0x3057, 0x3058, 0x3059, 0x305a, 0x305b, 0x305c, 0x305d, 0x305e, 0x305f, 0x3060, 
    0x3061, 0x3063, 0x3064, 0x3065, 0x3066, 0x3067, 0x3068, 0x3069, 0x306a, 0x306b, 
    0x306d, 0x306e, 0x306f, 0x3070, 0x3072, 0x3073, 0x3076, 0x3078, 0x3079, 0x307b, 
    0x307c, 0x307e, 0x307f, 0x3080, 0x3081, 0x3082, 0x3083, 0x3084, 0x3086, 0x3087, 
    0x3088, 0x3089, 0x308a, 0x308b, 0x308c, 0x308d, 0x308f, 0x3092, 0x3093, 0x30a4, 
    0x30b3, 0x30b5, 0x30b9, 0x30bf, 0x30c3, 0x30c7, 0x30c8, 0x30c9, 0x30d5, 0x30e0, 
    0x30e5, 0x30e7, 0x30e9, 0x30ea, 0x30eb, 0x30f3, 0x30fb, 0x30fc, 0x4e00, 0x4e0d, 
    0x4e2d, 0x4e8c, 0x4eac, 0x4eba, 0x4eca, 0x4ed6, 0x4f55, 0x4f7f, 0x50d5, 0x5165, 
    0x5168, 0x516c, 0x5199, 0x51b7, 0x5238, 0x524d, 0x52dd, 0x53c2, 0x53d6, 0x5408, 
    0x56de, 0x5834, 0x590f, 0x5916, 0x591a, 0x5927, 0x5b50, 0x5b89, 0x5b9a, 0x5b9f, 
    0x5c0f, 0x5c11, 0x5c4b, 0x5e2f, 0x5e74, 0x5e83, 0x5e97, 0x5ea6, 0x5f53, 0x5f7c, 
    0x601d, 0x60c5, 0x611f, 0x614b, 0x624b, 0x62bc, 0x6301, 0x63db, 0x643a, 0x65b0, 
    0x65b9, 0x65e5, 0x6642, 0x66f8, 0x6700, 0x6709, 0x672c, 0x6765, 0x6771, 0x697d, 
    0x6c17, 0x6c34, 0x6d41, 0x7121, 0x7269, 0x7279, 0x73fe, 0x7518, 0x7528, 0x767d, 
    0x767e, 0x7684, 0x76ee, 0x76f8, 0x796d, 0x79c1, 0x79cb, 0x7a7a, 0x7b11, 0x7f8e, 
    0x80fd, 0x81ea, 0x821e, 0x884c, 0x8857, 0x8868, 0x898b, 0x8a00, 0x8a71, 0x8cb7, 
    0x8fbc, 0x8fd4, 0x901a, 0x904a, 0x9053, 0x958b, 0x9593, 0x95a2, 0x96e3, 0x98a8, 
    0x98df, 0x9ad8, 0xff01, 0xff08, 0xff09, 0xff0c, 0xff0e, 0xff10, 0xff11, 0xff12, 
    0xff13, 0xff15, 0xff1f, 0xff3b, 0xff3d, 0xff3e, 0xff4f, };
static int16_t values_ja_UW4[] = {
    -817, -2208, -1296, -1513, -148, -7452, -7440, -142, 2301, -5393, 
    -3209, -1156, -1501, 501, -1531, -2446, -1844, 820, -2662, -3577, 
    -2074, -1428, -2884, -840, -3441, -455, -517, 591, -1716, -327, 
    -1725, -2352, -1159, -1966, -1498, -907, 456, -935, -1675, -2037, 
    -1762, -4313, -1195, -776, -3839, -3120, -2917, -697, -1928, -4299, 
    -1659, -4018, -3332, -2432, 1076, -1619, -2267, -247, -2964, -176, 
    -949, -1296, -1111, -1261, -1867, -2746, -2441, -1257, -2265, -1527, 
    -643, -4391, -4081, -5462, -4326, -2793, -1624, -4861, -3821, -507, 
    344, 75, -218, -212, -2189, 174, -148, -76, -157, -41, 
    -434, -156, -56, -707, -1178, -2078, -677, -2899, 576, 505, 
    34, 481, 614, 512, 1002, 368, 1291, 1131, 856, 412, 
    475, 724, 159, 2351, -471, -75, 4, 45, -45, -948, 
    -154, 333, 403, 153, 1062, 788, -233, 63, -356, 368, 
    736, 436, -8, -1138, -625, 1811, 101, -125, 384, 1247, 
    1386, -375, 28, -582, 270, 264, 180, -278, 441, 150, 
    -816, 695, 564, 411, 1072, 744, -1249, 430, 470, 308, 
    235, 286, 254, 192, -204, 623, 191, 383, -716, 451, 
    45, -500, 117, 54, 413, 1957, 307, 2526, -3444, 4, 
    -1270, 792, 138, 411, 443, 1003, 386, 227, 316, 366, 
    -568, -347, -8, 1409, 181, 61, -393, -145, 179, 673, 
    652, 229, -4469, 2399, -4207, -4205, -2874, -374, 710, 533, 
    22, 52, -3412, 1760, -1427, -256, -489, };

// Weights for UW5
static uint64_t keys_ja_UW5[] = {
    0x3000, 0x3001, 0x3002, 0x3005, 0x300d, 0x3042, 0x3044, 0x3046, 0x3048, 0x304a, 
    0x304b, 0x304c, 0x304d, 0x304e, 0x304f, 0x3050, 0x3053, 0x3055, 0x3056, 0x3057, 
    0x3058, 0x3059, 0x305a, 0x305b, 0x305d, 0x305f, 0x3060, 0x3061, 0x3063, 0x3064, 
    0x3066, 0x3067, 0x3068, 0x3069, 0x306a, 0x306b, 0x306e, 0x306f, 0x3070, 0x3073, 
    0x3076, 0x3078, 0x3079, 0x307c, 0x307e, 0x307f, 0x3080, 0x3081, 0x3082, 0x3087, 
    0x3088, 0x3089, 0x308a, 0x308b, 0x308c, 0x308d, 0x308f, 0x3092, 0x3093, 0x30a2, 
    0x30a4, 0x30bf, 0x30c8, 0x30d0, 0x30e9, 0x30eb, 0x30f3, 0x30fb, 0x30fc, 0x4e00, 
    0x4e0a, 0x4e2d, 0x4f53, 0x4f55, 0x4f7f, 0x5148, 0x5165, 0x51b7, 0x5206, 0x5229, 
    0x5238, 0x52b9, 0x5408, 0x5834, 0x5b66, 0x5bfa, 0x5e2f, 0x5e74, 0x5f53, 0x601d, 
    0x610f, 0x6210, 0x624b, 0x6599, 0x65e5, 0x6700, 0x6709, 0x6765, 0x6c34, 0x7684, 
    0x79fb, 0x7a2e, 0x7d9a, 0x80fd, 0x8449, 0x884c, 0x898b, 0x901a, 0x90fd, 0x964d, 
    0x96fb, 0x9762, 0xff01, 0xff08, 0xff0e, 0xff11, 0xff17, 0xff1f, 0xff2e, 0xff3d, 
    0xff4f, };
static int16_t values_ja_UW5[] = {
    -135, -1011, -2177, 505, -1068, -271, 345, 325, 637, 345, 
    210, -272, 1177, 348, 287, 159, 500, -327, 1494, -394, 
    886, -681, 1173, -303, -421, 198, -338, 572, 964, 1091, 
    169, -955, -617, -41, -608, -612, -641, -874, 209, 826, 
    15, -146, 1871, 1415, -353, 293, 458, 851, -93, 90, 
    -587, 222, 409, 175, 495, -360, 710, -674, 1001, -123, 
    171, 244, -313, -254, 29, -472, -30, -1082, 4, -151, 
    -1087, 8, -1085, -176, -1390, -562, -341, 1123, 173, 365, 
    -1133, 111, 255, 4, 49, -461, 303, 876, 401, -891, 
    708, 46, 179, 579, 342, -116, -37, -122, -154, -54, 
    -571, 42, -872, 219, 791, -180, -272, -209, 40, 104, 
    -285, 776, -384, -67, -184, -29, -101, -192, 104, -470, 
    95, };

// Weights for UW6
static uint64_t keys_ja_UW6[] = {
    0x3001, 0x3002, 0x3042, 0x3044, 0x3046, 0x304a, 0x304b, 0x304c, 0x304d, 0x304e, 
    0x304f, 0x3051, 0x3053, 0x3054, 0x3055, 0x3057, 0x3059, 0x305a, 0x305d, 0x3060, 
    0x3063, 0x3064, 0x3066, 0x3067, 0x3069, 0x306a, 0x306b, 0x306e, 0x306f, 0x3070, 
    0x3071, 0x3073, 0x3076, 0x307e, 0x3080, 0x3081, 0x3082, 0x3083, 0x3084, 0x3086, 
    0x3089, 0x308a, 0x308b, 0x308c, 0x308d, 0x308f, 0x3092, 0x3093, 0x30a4, 0x30ab, 
    0x30af, 0x30b1, 0x30b7, 0x30bf, 0x30d1, 0x30d4, 0x30e1, 0x30eb, 0x30f3, 0x30fb, 
    0x30fc, 0x4e0d, 0x5165, 0x51fa, 0x5238, 0x52b9, 0x5370, 0x53c2, 0x53ef, 0x5468, 
    0x56de, 0x5834, 0x5bfa, 0x5e83, 0x5e97, 0x5f7c, 0x601d, 0x6027, 0x614b, 0x65b9, 
    0x6765, 0x6a5f, 0x6c17, 0x713c, 0x7684, 0x7740, 0x795e, 0x7a7a, 0x7df4, 0x81ea, 
    0x8a00, 0x8fbc, 0x9001, 0x904a, 0x904e, 0x9593, 0x98df, 0xff10, 0xff11, 0xff1a, 
    };
static int16_t values_ja_UW6[] = {
    180, -307, -496, 365, 35, -18, 231, 320, -17, 280, 
    240, -213, 41, -283, 555, 581, -90, -403, -101, 95, 
    301, 506, -16, 219, 828, 218, 245, 85, 307, 527, 
    813, 129, -248, 170, 168, 1415, -18, -4, 819, 755, 
    65, 578, 71, 119, 352, 60, 85, 324, -244, 292, 
    -346, -388, -130, 380, -112, 780, 239, 207, -64, -639, 
    -66, 204, 621, 68, 1711, -725, 360, 114, 567, 275, 
    -94, -864, 611, -150, 164, -1272, -111, 2064, 221, -235, 
    -261, 216, 415, 643, 479, -20, 33, 1589, 8, 123, 
    -361, 679, -896, -906, 846, -4, -284, 626, 33, 1217, 
    };

// Weights for BW1
static uint64_t keys_ja_BW1[] = {
    0x300103044, 0x30010304b, 0x30010304c, 0x300103066, 0x300103067, 0x300103068, 0x30010306b, 0x30010306f, 0x300103082, 0x30410307e, 
    0x304203002, 0x304403057, 0x30440305f, 0x304403066, 0x304403068, 0x30440306a, 0x304404f7f, 0x30440601d, 0x30440767d, 0x304408cb7, 
    0x304603044, 0x304603053, 0x304603068, 0x304603082, 0x304603088, 0x30460308d, 0x30460601d, 0x304b03046, 0x304b03057, 0x304b03068, 
    0x304b0306b, 0x304c03061, 0x304c03068, 0x304c0306e, 0x304c0308a, 0x304c06c17, 0x304d03067, 0x304d03068, 0x304d03079, 0x304f0306a, 
    0x305103060, 0x30550304f, 0x305703082, 0x305705c11, 0x30580540c, 0x305c0306a, 0x305d03053, 0x305f03044, 0x305f0304d, 0x305f03063, 
    0x305f03066, 0x305f0308c, 0x30600305f, 0x30600307e, 0x306003093, 0x306103046, 0x306403082, 0x30660304f, 0x306603058, 0x306603063, 
    0x306603081, 0x30660308c, 0x306606765, 0x306703044, 0x306703068, 0x30670307e, 0x30670308b, 0x306703093, 0x306803001, 0x30680304c, 
    0x306803053, 0x30680305f, 0x30680308a, 0x30680308b, 0x306903051, 0x30690306a, 0x306903093, 0x306a03044, 0x306a03046, 0x306a0304b, 
    0x306a0304d, 0x306a03060, 0x306a03093, 0x306b03068, 0x306b0308a, 0x306b0308b, 0x306b06c17, 0x306e03044, 0x306e03053, 0x306e0305d, 
    0x306e0305f, 0x306e03082, 0x306e0308a, 0x306e0308b, 0x306f03067, 0x306f03068, 0x306f0306b, 0x306f0306e, 0x307003048, 0x30700308c, 
    0x307e0305f, 0x307e0307e, 0x307f0306e, 0x30810305f, 0x308203044, 0x30820304b, 0x308203066, 0x308203067, 0x30820306b, 0x30820306e, 
    0x30820308a, 0x308403046, 0x30890304b, 0x308903059, 0x30890305f, 0x30890306a, 0x308903084, 0x30890308f, 0x308a0304d, 0x308a0305f, 
    0x308a03071, 0x308a0307e, 0x308a03088, 0x308b03042, 0x308b03059, 0x308b03066, 0x308b0307e, 0x308b03081, 0x308b0308c, 0x308c0304f, 
    0x308c0305d, 0x30af030c3, 0x30b8030fc, 0x30eb030af, 0x30fb03002, 0x30fb030fb, 0x30fc030b1, 0x4e0a0306e, 0x4e0a04ee5, 0x4eba0308b, 
    0x4eba056fd, 0x4eca03001, 0x51860ff10, 0x5728073fe, 0x590905927, 0x5e970304a, 0x5f8c0306e, 0x611f0306b, 0x6bb50666e, 0x752805229, 
    0x8fd106700, 0x9054053cb, 0x95930306e, 0x969b05b9f, 0xff010ff01, 0xff0e0305f, 0xff110306f, 0xff1303002, };
static int16_t values_ja_BW1[] = {
    -329, -255, 1178, 702, 572, 245, 564, 436, 29, 444, 
    -619, 917, 242, -522, -725, 1045, -715, -1273, 3534, -698, 
    138, -591, 1085, 1414, -1620, -315, 57, 12, 96, 1688, 
    180, -2703, -1393, 482, -96, 115, -364, 1349, 424, 149, 
    391, -24, 1050, 1375, 1427, 1571, 1413, 310, 236, 166, 
    147, 1494, 398, 1343, 515, 218, 1694, 680, 254, -196, 
    969, -1090, 386, -844, 941, 160, 252, -325, 310, -1545, 
    -1455, -948, 1198, 202, 1014, 1137, -303, -98, 513, -137, 
    687, -302, 471, -20, 356, -442, -70, -369, -1039, -1066, 
    -1543, -538, -399, -1593, -518, -4, 588, 1277, 791, 936, 
    2162, 2830, 3058, 524, -216, -1290, 623, 667, 816, 725, 
    1231, -1096, 1723, 190, 949, 1251, 416, -71, 449, 102, 
    342, 1018, 1376, 141, -159, 372, -429, -429, 350, 922, 
    293, 631, 789, 437, 2456, 237, -781, 589, 1223, 626, 
    24, 302, 304, 281, 401, 199, 753, -579, 655, 1018, 
    1515, 625, 1155, 83, 322, 1736, 37, 274, };

// Weights for BW2
static uint64_t keys_ja_BW2[] = {
    0x304203066, 0x304203067, 0x30420306f, 0x304203082, 0x304403044, 0x304403046, 0x304403057, 0x30440305f, 0x304403066, 0x304403067, 
    0x304403068, 0x30440306a, 0x30440306f, 0x304403070, 0x304403089, 0x304603088, 0x304a03066, 0x304a03068, 0x304a0306e, 0x304b03046, 
    0x304b03068, 0x304b0306a, 0x304b0306e, 0x304c0306e, 0x304c04eba, 0x304d03066, 0x304d03067, 0x304d03068, 0x304f03066, 0x304f0306a, 
    0x30530305d, 0x305303068, 0x305303069, 0x305403059, 0x305703044, 0x30570304c, 0x30570304f, 0x305703067, 0x30570306b, 0x305703082, 
    0x30580306f, 0x305903067, 0x305903068, 0x305903084, 0x305a0306f, 0x305d03001, 0x305f03044, 0x305f03057, 0x305f03066, 0x305f0307e, 
    0x305f0308c, 0x30600304f, 0x30600305f, 0x30600306e, 0x30610304c, 0x30610305f, 0x306103082, 0x30630304c, 0x306403044, 0x306403082, 
    0x30670306e, 0x30670306f, 0x3067030fc, 0x306803001, 0x30680304c, 0x30680305f, 0x30680308b, 0x306903046, 0x306903051, 0x30690306a, 
    0x306903093, 0x306a03001, 0x306a03044, 0x306a0304f, 0x306a03067, 0x306a03068, 0x306a0306b, 0x306a0306f, 0x306a03082, 0x306a03089, 
    0x306a0308a, 0x306a030fc, 0x306e03064, 0x306e03082, 0x306e0308b, 0x306f03067, 0x306f0306b, 0x306f0306e, 0x307e03044, 0x307e03046, 
    0x307e0305f, 0x307f03066, 0x307f0306e, 0x308203044, 0x30820305f, 0x308203066, 0x308203067, 0x308203068, 0x308203069, 0x30820306b, 
    0x30820306e, 0x30820308a, 0x308403046, 0x308803044, 0x30880304c, 0x30880305f, 0x30880306e, 0x30880308b, 0x30c9030fc, 0x30fb030fb, 
    0x4eac0ff3d, 0x4eba03044, 0x524d0306e, 0x540c03068, 0x601d03068, 0x65b90306e, 0x65e504eca, 0x66420305f, 0x6a5f0306e, 0x6e0503001, 
    0x959306642, 0x96fb05e2f, 0xff1103001, 0xff110306e, };
static int16_t values_ja_BW2[] = {
    -2039, -3302, -1185, -935, -357, -93, -297, -1183, -1296, -33, 
    274, -2999, -770, -968, -54, -175, -2518, -3875, 458, -137, 
    -782, -299, -278, -101, 1674, -1069, -2119, -230, -1248, -956, 
    -652, -337, -20, -1196, -401, 280, -1520, -1856, -458, -490, 
    -2465, -3035, -127, -524, -333, -1810, -1737, -402, -37, -2737, 
    -890, -1043, -2687, -873, 62, -851, -157, -1494, -659, -433, 
    -921, 41, 83, -558, -1022, 1475, -643, -1684, -126, -1807, 
    -722, -145, -144, -1771, -1003, 159, -362, -331, -157, -64, 
    191, 476, 186, -753, -197, -1027, -1012, -1100, -421, -1227, 
    -2116, -1524, -2622, 709, 318, -151, -1689, -359, -675, -1213, 
    -489, -1014, -2003, -494, 195, -393, -838, -944, -523, -1221, 
    -152, 80, -820, -442, 545, 96, -360, 421, -2082, -374, 
    -681, -1351, -643, -539, };

// Weights for BW3
static uint64_t keys_ja_BW3[] = {
    0x300103057, 0x300103067, 0x300203059, 0x30410307e, 0x304403044, 0x304403055, 0x304403057, 0x30440305f, 0x304403060, 0x304403064, 
    0x304403068, 0x30440306a, 0x30440306f, 0x3044066f8, 0x304603044, 0x30460305d, 0x304603068, 0x304603069, 0x304603082, 0x304603088, 
    0x304808003, 0x304a03068, 0x304b03044, 0x304b03046, 0x304b0304b, 0x304b0306a, 0x304b0308f, 0x304c03061, 0x304c0307f, 0x304c04e0a, 
    0x304d03067, 0x304d03068, 0x304d0884c, 0x304e0904e, 0x304f0306a, 0x304f0307c, 0x304f03088, 0x305003059, 0x30510304b, 0x305103060, 
    0x305103064, 0x305303053, 0x30530305d, 0x305303068, 0x305303069, 0x305403059, 0x30570305d, 0x30570306f, 0x30570307b, 0x30570307e, 
    0x30570697d, 0x30580306f, 0x305903067, 0x30590307e, 0x305a0307e, 0x305b0307e, 0x305d03053, 0x305f03044, 0x305f03057, 0x305f0307e, 
    0x305f0307f, 0x305f06765, 0x30600305f, 0x30600307e, 0x306103046, 0x30610304c, 0x306303042, 0x30630304b, 0x30630304d, 0x30630305a, 
    0x306303068, 0x30630306a, 0x30630307e, 0x306303081, 0x306303082, 0x306303084, 0x306304f7f, 0x306306301, 0x30640304b, 0x306403082, 
    0x306603044, 0x306603057, 0x306603068, 0x306603081, 0x3066051fa, 0x30670307e, 0x306704e2d, 0x306803053, 0x306803082, 0x306a03064, 
    0x306b0624b, 0x306b09006, 0x306e03042, 0x306e03053, 0x306e0305d, 0x306e03082, 0x306f03093, 0x307e03044, 0x307e03046, 0x307e0304d, 
    0x307e03057, 0x307e0305f, 0x307e0306f, 0x307f0306e, 0x30810305f, 0x3081059cb, 0x30820304b, 0x308203067, 0x308203068, 0x308303057, 
    0x308303061, 0x308403044, 0x308703061, 0x308903044, 0x30890304b, 0x30890306a, 0x308903082, 0x308a03042, 0x308a0304a, 0x308a03068, 
    0x308a0307e, 0x308a03088, 0x308a0796d, 0x308b03042, 0x308b03044, 0x308b0306a, 0x308b03081, 0x308c03053, 0x308d03044, 0x308d03053, 
    0x308d03060, 0x309303055, 0x309303069, 0x309303082, 0x30bd030d1, 0x30f3030a4, 0x30fb030fb, 0x30fc030e1, 0x30fc030eb, 0x4e0a04ee5, 
    0x5ea607a0b, 0x601d03068, 0x6765051fa, 0x740606599, 0x80fd053ef, 0x83360304a, 0x8eca096fb, };
static int16_t values_ja_BW3[] = {
    -136, 119, -152, 1442, 1237, -672, -519, -238, 680, 62, 
    -1257, 287, 272, 12, 719, -1050, -693, 296, 2306, -404, 
    429, 678, 480, -268, 1752, 198, 691, 1979, -374, 1571, 
    980, 1917, -218, -95, 348, 329, 1082, 1094, 2909, -941, 
    251, 552, 647, 742, 46, 897, -184, 3011, -350, -670, 
    128, 3173, -239, -943, 233, -58, -520, 712, 813, -479, 
    -739, 408, 1198, 296, 444, -345, -93, -802, 727, 121, 
    917, -512, -24, 260, 626, 422, 109, 1098, 821, 666, 
    -372, 278, 2245, -1778, 128, -677, 414, 899, 1264, 437, 
    1242, 246, 71, 1656, 1844, 3479, 438, 85, 4971, -514, 
    -93, 1383, 1041, 3096, 686, -28, -670, 1643, 1038, 1283, 
    -1016, 732, 1986, 621, -1223, -160, 2538, 1053, -2875, 539, 
    -596, -1463, 214, -339, 556, 481, -1304, 1075, 832, -190, 
    -357, -1566, -397, 1078, 589, 203, -1499, 364, 249, -807, 
    -24, -161, -428, 8, 402, 627, 121, };

// Weights for TW1
static uint64_t keys_ja_TW1[] = {
    0x3001030440306a, 0x30440306a0304d, 0x3044030890304f, 0x30460304403068, 0x30460601d03068, 0x304b0306a0304b, 0x304f0304403066, 0x304f0305403059, 0x304f0306a03082, 0x30570304b03057, 
    0x305f030570307e, 0x305f030630601d, 0x30600305f03002, 0x30640306803072, 0x3066030570305d, 0x3066030630304c, 0x30660306303060, 0x3066030630306a, 0x30660306306301, 0x3068030530308b, 
    0x3068030930306a, 0x30690304603087, 0x30690309303068, 0x306a0304603088, 0x306e0305d03002, 0x306e0305d0306f, 0x307e0307e0306e, 0x30890304c0306a, 0x308a0304b03063, 0x308a0306a0304b, 
    0x308a0306f03084, 0x308b0304203067, 0x308c0304f03066, 0x308c0305d03001, 0x308d030440308d, 0x3093030550304f, 0x30930308d03061, 0x30b0030fc030ea, 0x30fb030fb030fb, 0x75280522903092, 
    };
static int16_t values_ja_TW1[] = {
    -1039, 141, 4, 545, 251, 698, 1686, 163, 947, 2079, 
    -268, 811, 676, 732, 556, -418, 164, -86, -1851, -271, 
    -691, 1174, 1250, 1298, 16, -68, 1162, 1223, 599, 2083, 
    1728, 267, 1444, 412, 54, 225, 196, 309, 1104, -1017, 
    };

// Weights for TW2
static uint64_t keys_ja_TW2[] = {
    0x30420304c03068, 0x30420308203067, 0x30420308203068, 0x30440306603048, 0x30440306603057, 0x30440306703093, 0x30440306f03068, 0x304a0306603057, 0x30530305f03063, 0x30530308b03048, 
    0x3057030820304b, 0x305d030820305d, 0x306a0304b03057, 0x306a0306b03046, 0x306a0306f03067, 0x306a0308203067, 0x306a030890304b, 0x51650306b06c17, };
static int16_t values_ja_TW2[] = {
    -1130, -936, -757, 50, -406, -2306, -59, -37, -267, -436, 
    -463, -1441, 440, -803, -1086, -207, -477, -4086, };

// Weights for TW3
static uint64_t keys_ja_TW3[] = {
    0x30440304403070, 0x30440304403082, 0x30440306a0306f, 0x30440306a03089, 0x30460304403046, 0x30460304403066, 0x30460304403068, 0x304d030680308b, 0x304f0304403066, 0x304f0306a03082, 
    0x30530306803044, 0x305f0304403066, 0x305f0305703067, 0x305f0305703068, 0x30630304203067, 0x30630306a03068, 0x306308a0003068, 0x30660305703068, 0x3066030570306b, 0x3067030930306a, 
    0x30680305303046, 0x30680305303059, 0x3068030530308b, 0x307e0305703066, 0x307e0307e0306e, 0x308a0304203067, 0x308a0304203082, 0x308b0304203001, 0x308b0304203067, 0x308b0304403066, 
    0x308c0305d0306f, 0x308d0305303068, 0x30930306a03001, };
static int16_t values_ja_TW3[] = {
    -137, -408, -473, -1075, -120, 769, 970, 108, -289, -1899, 
    75, -66, -54, -1169, -812, 229, -1166, 655, -37, 574, 
    -4, 710, -49, -1361, -961, -535, -183, -2756, -749, -1375, 
    -1539, -1724, -293, };

// Weights for TW4
static uint64_t keys_ja_TW4[] = {
    0x30010308203067, 0x30010308a03042, 0x3002030440306a, 0x3002030590307e, 0x30020305f03044, 0x30020305f03057, 0x30020306803053, 0x30020308b03044, 0x3044030460305d, 0x30440305403059, 
    0x30440305703089, 0x30440306a03057, 0x3044030890304f, 0x30440308d03044, 0x304b030930306a, 0x304c0306803053, 0x304d0306603057, 0x30570304b03057, 0x305f0304d03067, 0x305f0306303060, 
    0x30630308703061, 0x3066030630307e, 0x306603079098df, 0x3066030930306a, 0x3067030460305d, 0x30670304603088, 0x3067030510308f, 0x30670306803053, 0x30680304403044, 0x30680308b03059, 
    0x3068030930306a, 0x306a0304603088, 0x306a0304b03044, 0x306a0304b0306a, 0x306a0304f0306a, 0x306b0304603088, 0x306b0306803053, 0x306f0306803053, 0x30700304803044, 0x307e0304d03067, 
    0x307e0308a03042, 0x307f0306a03061, 0x30820304b03057, 0x30820306603057, 0x30820306803053, 0x30890304b03060, 0x30890304f03044, 0x308a0305f03042, 0x308a0306a0304b, 0x308d0305303068, 
    0x308d0306103082, 0x30920306803053, 0x30930306903046, 0x30c8030d5030bd, 0x30eb030fc030e1, 0x5ba205149089b3, };
static int16_t values_ja_TW4[] = {
    628, -595, 191, -1366, 1066, -1569, 683, 37, 16, 314, 
    424, 438, 1598, 590, 116, -824, 278, 1383, 2069, -1150, 
    20, -824, 140, -102, -925, -896, -234, 380, -63, 406, 
    481, -2232, 651, 669, 253, -1673, -856, -232, 397, 52, 
    -1767, 1130, 494, -174, -588, 1092, 170, -390, 2848, 2195, 
    1697, 255, 1258, 512, 256, -75, };

budoux_model_t model_ja = {
    .base_score = -1479,
    .UW1 = { .keys = keys_ja_UW1, .values = values_ja_UW1, .count = 109, },
    .UW2 = { .keys = keys_ja_UW2, .values = values_ja_UW2, .count = 139, },
    .UW3 = { .keys = keys_ja_UW3, .values = values_ja_UW3, .count = 171, },
    .UW4 = { .keys = keys_ja_UW4, .values = values_ja_UW4, .count = 217, },
    .UW5 = { .keys = keys_ja_UW5, .values = values_ja_UW5, .count = 121, },
    .UW6 = { .keys = keys_ja_UW6, .values = values_ja_UW6, .count = 100, },
    .BW1 = { .keys = keys_ja_BW1, .values = values_ja_BW1, .count = 158, },
    .BW2 = { .keys = keys_ja_BW2, .values = values_ja_BW2, .count = 124, },
    .BW3 = { .keys = keys_ja_BW3, .values = values_ja_BW3, .count = 147, },
    .TW1 = { .keys = keys_ja_TW1, .values = values_ja_TW1, .count = 40, },
    .TW2 = { .keys = keys_ja_TW2, .values = values_ja_TW2, .count = 18, },
    .TW3 = { .keys = keys_ja_TW3, .values = values_ja_TW3, .count = 33, },
    .TW4 = { .keys = keys_ja_TW4, .values = values_ja_TW4, .count = 56, },
};