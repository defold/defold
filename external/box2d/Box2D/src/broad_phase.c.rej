@@ -190,11 +190,14 @@
 	// b2ShapeDef::forceContactCreation, b2ShapeDef::isSensor, or when a static shape is modified.
 	// There can easily be scenarios where the static proxy is in the moveSet but the dynamic proxy is not.
 	// I could have some flag to indicate that there are any static bodies in the moveSet.
-	
+
 	// Is this proxy also moving?
-	if ( queryProxyType == b2_dynamicBody)
+
+	// DEFOLD EDIT BEGIN
+	// Support for kinematic bodies that create contacts
+	if ( queryProxyType == b2_dynamicBody || queryProxyType == b2_kinematicBody )
 	{
-		if ( treeType == b2_dynamicBody && proxyKey < queryProxyKey)
+		if ( (treeType == b2_dynamicBody || treeType == b2_kinematicBody) && proxyKey < queryProxyKey)
 		{
 			bool moved = b2ContainsKey( &broadPhase->moveSet, proxyKey + 1 );
 			if ( moved )
@@ -206,7 +209,8 @@
 	}
 	else
 	{
-		B2_ASSERT( treeType == b2_dynamicBody );
+		// Support for kinematic bodies that create contacts
+		B2_ASSERT( treeType == b2_dynamicBody || treeType == b2_kinematicBody );
 		bool moved = b2ContainsKey( &broadPhase->moveSet, proxyKey + 1 );
 		if ( moved )
 		{
@@ -214,6 +218,7 @@
 			return true;
 		}
 	}
+	// DEFOLD EDIT END
 
 	uint64_t pairKey = B2_SHAPE_PAIR_KEY( shapeId, queryContext->queryShapeIndex );
 	if ( b2ContainsKey( &broadPhase->pairSet, pairKey ) )
@@ -351,7 +356,11 @@
 		// Query trees. Only dynamic proxies collide with kinematic and static proxies.
 		// Using B2_DEFAULT_MASK_BITS so that b2Filter::groupIndex works.
 		b2TreeStats stats = { 0 };
-		if ( proxyType == b2_dynamicBody )
+
+		// DEFOLD EDIT BEGIN
+		// Box2D normally does not support collisions for kinematic bodies, but we do.
+		if ( proxyType == b2_dynamicBody || proxyType == b2_kinematicBody )
+		// DEFOLD EDIT END
 		{
 			// consider using bits = groupIndex > 0 ? B2_DEFAULT_MASK_BITS : maskBits
 			queryContext.queryTreeType = b2_kinematicBody;
@@ -364,6 +373,17 @@
 			stats.nodeVisits += statsStatic.nodeVisits;
 			stats.leafVisits += statsStatic.leafVisits;
 		}
+		// DEFOLD EDIT BEGIN
+		// If the proxy type is static, we need to check to kinematic body tree as well.
+		// This is because defold supports collisions with kinematic bodies.
+		else if (proxyType == b2_staticBody)
+		{
+			queryContext.queryTreeType = b2_kinematicBody;
+			b2TreeStats statsKinematic = b2DynamicTree_Query( bp->trees + b2_kinematicBody, fatAABB, B2_DEFAULT_MASK_BITS, b2PairQueryCallback, &queryContext );
+			stats.nodeVisits += statsKinematic.nodeVisits;
+			stats.leafVisits += statsKinematic.leafVisits;
+		}
+		// DEFOLD EDIT END
 
 		// All proxies collide with dynamic proxies
 		// Using B2_DEFAULT_MASK_BITS so that b2Filter::groupIndex works.
