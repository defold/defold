function init(self)
	-- Marty (fixed)
	local names = {"hips","Belly","Chest","Neck","Head","Hair","Arm_right","Forearm_right","Hand_right","Arm_left","Forearm_left","Hand_left","Pocket_rignt","Pocket_left","Hoverboard","Shoe_right_foot","Shoe_right","Root Bone R","Shoe_left_foot","Shoe_left","Root Bone L","Hoverboard_ctrl"}
	--local names = {"Neck", "hips"}

	--rive.cancel("#rivemodel")

	local pos = go.get_position()
	
	for _, name in ipairs(names) do		
		local bone_go = rive.get_go("#rivemodel", name)

		local id = factory.create("#bonefactory", vmath.vector3(0,0,0))
		go.set_parent(id, bone_go, false)
	end

	--go.animate(".", "position.x", go.PLAYBACK_LOOP_PINGPONG, pos.x + 100, go.EASING_LINEAR, 2)
end

function update(self, dt)
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
