-- Copyright 2020-2025 The Defold Foundation
-- Copyright 2014-2020 King
-- Copyright 2009-2014 Ragnar Svensson, Christian Murray
-- Licensed under the Defold License version 1.0 (the "License"); you may not use
-- this file except in compliance with the License.
--
-- You may obtain a copy of the License, together with FAQs at
-- https://www.defold.com/license
--
-- Unless required by applicable law or agreed to in writing, software distributed
-- under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
-- CONDITIONS OF ANY KIND, either express or implied. See the License for the
-- specific language governing permissions and limitations under the License.

local typing_delay = 0.05

function init(self)
	local ids = {"credits", "art", "art2", "code", "code2", "music", "music2"}
	self.nodes = {}
	self.texts = {}
	for _,v in ipairs(ids) do
		local n = gui.get_node(v)
		table.insert(self.nodes, n)
		table.insert(self.texts, gui.get_text(n))
		gui.set_text(n, "")
	end
	self.timer = 0
	self.count = 0
	self.typing = 0
	msg.post("#", "disable")
end

function update(self, dt)
	if self.typing > 0 and self.typing <= #self.nodes then
		self.timer = self.timer + dt
		local node = self.nodes[self.typing]
		local text = self.texts[self.typing]
		local count = math.floor(self.timer / typing_delay + 1)
		if math.min(#text, count) > self.count then
			msg.post("#sound", "play_sound")
			self.count = count
		end
		gui.set_text(node, string.sub(text, 1, math.min(#text, count)))
		if count > (#text + 10) then
			self.typing = self.typing + 1
			self.timer = 0
			self.count = 0
			if self.typing > #self.nodes then
				for i,n in ipairs(self.nodes) do
					local cb = nil
					if i == 1 then
						cb = function ()
							gui.animate(gui.get_node("background"), "color.w", 1.0, gui.EASING_LINEAR, 0.5, 0.0, function() msg.post("@system:", "exit", {code = 0}) end)
						end
					end
					gui.animate(n, "outline.w", 0, gui.EASING_LINEAR, 0.5, 1.0, cb)
				end
			end
		end
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("start") then
		local n = gui.get_node("background")
		gui.set_color(n, vmath.vector4(0, 0, 0, 0))
		gui.animate(n, "color.w", 0.8, gui.EASING_LINEAR, 1.0, 0.0, function () self.typing = 1 end)
	end
end

function on_input(self, action_id, action)
    -- Add input-handling code here
    -- Remove this function if not needed
end

function on_reload(self)
    -- Add input-handling code here
    -- Remove this function if not needed
end
